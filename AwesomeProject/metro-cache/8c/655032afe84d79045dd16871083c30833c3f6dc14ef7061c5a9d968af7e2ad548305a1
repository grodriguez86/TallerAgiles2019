{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"./getScreenForRouteName","data":{"isAsync":false}},{"name":"./createConfigGetter","data":{"isAsync":false}},{"name":"../NavigationActions","data":{"isAsync":false}},{"name":"./validateRouteConfigMap","data":{"isAsync":false}},{"name":"./getScreenConfigDeprecated","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../utils/invariant\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./getScreenForRouteName\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./createConfigGetter\"));\n\n  var _NavigationActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../NavigationActions\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./validateRouteConfigMap\"));\n\n  var _getScreenConfigDeprecated = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./getScreenConfigDeprecated\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function childrenUpdateWithoutSwitchingIndex(actionType) {\n    return [_NavigationActions.default.SET_PARAMS, _NavigationActions.default.COMPLETE_TRANSITION].includes(actionType);\n  }\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var order = config.order || Object.keys(routeConfigs);\n    var paths = config.paths || {};\n    var initialRouteParams = config.initialRouteParams;\n    var initialRouteName = config.initialRouteName || order[0];\n    var backBehavior = config.backBehavior || 'none';\n    var shouldBackNavigateToInitialRoute = backBehavior === 'initialRoute';\n    var resetOnBlur = config.hasOwnProperty('resetOnBlur') ? config.resetOnBlur : true;\n    var initialRouteIndex = order.indexOf(initialRouteName);\n    var childRouters = {};\n    order.forEach(function (routeName) {\n      var routeConfig = routeConfigs[routeName];\n      paths[routeName] = typeof routeConfig.path === 'string' ? routeConfig.path : routeName;\n      childRouters[routeName] = null;\n      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n\n      if (screen.router) {\n        childRouters[routeName] = screen.router;\n      }\n    });\n\n    if (initialRouteIndex === -1) {\n      throw new Error(\"Invalid initialRouteName '\" + initialRouteName + \"'.\" + (\"Should be one of \" + order.map(function (n) {\n        return \"\\\"\" + n + \"\\\"\";\n      }).join(', ')));\n    }\n\n    function resetChildRoute(routeName) {\n      var params = routeName === initialRouteName ? initialRouteParams : undefined;\n      var childRouter = childRouters[routeName];\n\n      if (childRouter) {\n        var childAction = _NavigationActions.default.init();\n\n        return _objectSpread({}, childRouter.getStateForAction(childAction), {\n          key: routeName,\n          routeName: routeName,\n          params: params\n        });\n      }\n\n      return {\n        key: routeName,\n        routeName: routeName,\n        params: params\n      };\n    }\n\n    return {\n      getInitialState: function getInitialState() {\n        var routes = order.map(resetChildRoute);\n        return {\n          routes: routes,\n          index: initialRouteIndex,\n          isTransitioning: false\n        };\n      },\n      getNextState: function getNextState(prevState, possibleNextState) {\n        if (!prevState) {\n          return possibleNextState;\n        }\n\n        var nextState;\n\n        if (prevState.index !== possibleNextState.index && resetOnBlur) {\n          var prevRouteName = prevState.routes[prevState.index].routeName;\n          var nextRoutes = (0, _toConsumableArray2.default)(possibleNextState.routes);\n          nextRoutes[prevState.index] = resetChildRoute(prevRouteName);\n          return _objectSpread({}, possibleNextState, {\n            routes: nextRoutes\n          });\n        } else {\n          nextState = possibleNextState;\n        }\n\n        return nextState;\n      },\n      getStateForAction: function getStateForAction(action, inputState) {\n        var prevState = inputState ? _objectSpread({}, inputState) : inputState;\n        var state = inputState || this.getInitialState();\n        var activeChildIndex = state.index;\n\n        if (action.type === _NavigationActions.default.INIT) {\n          var params = action.params;\n\n          if (params) {\n            state.routes = state.routes.map(function (route) {\n              return _objectSpread({}, route, {\n                params: _objectSpread({}, route.params, {}, params, {}, route.routeName === initialRouteName ? initialRouteParams : null)\n              });\n            });\n          }\n        }\n\n        var activeChildLastState = state.routes[state.index];\n        var activeChildRouter = childRouters[order[state.index]];\n\n        if (activeChildRouter) {\n          var activeChildState = activeChildRouter.getStateForAction(action, activeChildLastState);\n\n          if (!activeChildState && inputState) {\n            return null;\n          }\n\n          if (activeChildState && activeChildState !== activeChildLastState) {\n            var _routes = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes[state.index] = activeChildState;\n            return this.getNextState(prevState, _objectSpread({}, state, {\n              routes: _routes\n            }));\n          }\n        }\n\n        if (backBehavior !== 'none') {\n          var isBackEligible = action.key == null || action.key === activeChildLastState.key;\n\n          if (action.type === _NavigationActions.default.BACK) {\n            if (isBackEligible && shouldBackNavigateToInitialRoute) {\n              activeChildIndex = initialRouteIndex;\n            } else {\n              return state;\n            }\n          }\n        }\n\n        var didNavigate = false;\n\n        if (action.type === _NavigationActions.default.NAVIGATE) {\n          var navigateAction = action;\n          didNavigate = !!order.find(function (childId, i) {\n            if (childId === navigateAction.routeName) {\n              activeChildIndex = i;\n              return true;\n            }\n\n            return false;\n          });\n\n          if (didNavigate) {\n            var childState = state.routes[activeChildIndex];\n            var newChildState;\n            var childRouter = childRouters[action.routeName];\n\n            if (action.action) {\n              newChildState = childRouter ? childRouter.getStateForAction(action.action, childState) : null;\n            } else if (!childRouter && action.params) {\n              newChildState = _objectSpread({}, childState, {\n                params: _objectSpread({}, childState.params || {}, {}, action.params)\n              });\n            }\n\n            if (newChildState && newChildState !== childState) {\n              var _routes2 = (0, _toConsumableArray2.default)(state.routes);\n\n              _routes2[activeChildIndex] = newChildState;\n              return this.getNextState(prevState, _objectSpread({}, state, {\n                routes: _routes2,\n                index: activeChildIndex\n              }));\n            }\n          }\n        }\n\n        if (action.type === _NavigationActions.default.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var _params = _objectSpread({}, lastRoute.params, {}, action.params);\n\n            var _routes3 = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes3[state.routes.indexOf(lastRoute)] = _objectSpread({}, lastRoute, {\n              params: _params\n            });\n            return this.getNextState(prevState, _objectSpread({}, state, {\n              routes: _routes3\n            }));\n          }\n        }\n\n        if (activeChildIndex !== state.index) {\n          return this.getNextState(prevState, _objectSpread({}, state, {\n            index: activeChildIndex\n          }));\n        } else if (didNavigate && !inputState) {\n          return state;\n        } else if (didNavigate) {\n          return null;\n        }\n\n        var index = state.index;\n        var routes = state.routes;\n        order.find(function (childId, i) {\n          var childRouter = childRouters[childId];\n\n          if (i === index) {\n            return false;\n          }\n\n          var childState = routes[i];\n\n          if (childRouter) {\n            childState = childRouter.getStateForAction(action, childState);\n          }\n\n          if (!childState) {\n            index = i;\n            return true;\n          }\n\n          if (childState !== routes[i]) {\n            routes = (0, _toConsumableArray2.default)(routes);\n            routes[i] = childState;\n            index = i;\n            return true;\n          }\n\n          return false;\n        });\n\n        if (childrenUpdateWithoutSwitchingIndex(action.type)) {\n          index = state.index;\n        }\n\n        if (index !== state.index || routes !== state.routes) {\n          return this.getNextState(prevState, _objectSpread({}, state, {\n            index: index,\n            routes: routes\n          }));\n        }\n\n        return state;\n      },\n      getComponentForState: function getComponentForState(state) {\n        var routeName = state.routes[state.index].routeName;\n        (0, _invariant.default)(routeName, \"There is no route defined for index \" + state.index + \". Check that\\n        that you passed in a navigation state with a valid tab/screen index.\");\n        var childRouter = childRouters[routeName];\n\n        if (childRouter) {\n          return childRouter.getComponentForState(state.routes[state.index]);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        var routeName = order[state.index];\n        var subPath = paths[routeName];\n        var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n        var path = subPath;\n        var params = route.params;\n\n        if (screen && screen.router) {\n          var stateRoute = route;\n          var child = screen.router.getPathAndParamsForState(stateRoute);\n          path = subPath ? subPath + \"/\" + child.path : child.path;\n          params = child.params ? _objectSpread({}, params, {}, child.params) : params;\n        }\n\n        return {\n          path: path,\n          params: params\n        };\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(path, params) {\n        return order.map(function (childId) {\n          var parts = path.split('/');\n          var pathToTest = paths[childId];\n\n          if (parts[0] === pathToTest) {\n            var childRouter = childRouters[childId];\n\n            var action = _NavigationActions.default.navigate({\n              routeName: childId\n            });\n\n            if (childRouter && childRouter.getActionForPathAndParams) {\n              action.action = childRouter.getActionForPathAndParams(parts.slice(1).join('/'), params);\n            } else if (params) {\n              action.params = params;\n            }\n\n            return action;\n          }\n\n          return null;\n        }).find(function (action) {\n          return !!action;\n        }) || order.map(function (childId) {\n          var childRouter = childRouters[childId];\n          return childRouter && childRouter.getActionForPathAndParams(path, params);\n        }).find(function (action) {\n          return !!action;\n        }) || null;\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, config.navigationOptions),\n      getScreenConfig: _getScreenConfigDeprecated.default\n    };\n  };\n\n  exports.default = _default;\n});","map":[[13,0,1,0],[15,0,2,0],[17,0,3,0],[19,0,5,0],[21,0,6,0],[23,0,7,0],[29,0,9,0],[29,11,9,9,"childrenUpdateWithoutSwitchingIndex"],[29,46,9,0],[29,47,9,45,"actionType"],[29,57,9,0],[29,59,9,57],[30,0,10,2],[30,11,10,9],[30,12,11,4,"NavigationActions"],[30,39,11,22,"SET_PARAMS"],[30,49,10,9],[30,51,12,4,"NavigationActions"],[30,78,12,22,"COMPLETE_TRANSITION"],[30,97,10,9],[30,99,13,4,"includes"],[30,107,10,9],[30,108,13,13,"actionType"],[30,118,10,9],[30,119,10,2],[31,0,14,1],[33,17,16,15],[33,35,16,16,"routeConfigs"],[33,47,16,15],[33,49,16,46],[34,0,16,46],[34,8,16,30,"config"],[34,14,16,46],[34,85,16,39],[34,87,16,46],[35,0,18,2],[35,41,18,25,"routeConfigs"],[35,53,18,2],[36,0,20,2],[36,8,20,8,"order"],[36,13,20,13],[36,16,20,16,"config"],[36,22,20,22],[36,23,20,23,"order"],[36,28,20,16],[36,32,20,32,"Object"],[36,38,20,38],[36,39,20,39,"keys"],[36,43,20,32],[36,44,20,44,"routeConfigs"],[36,56,20,32],[36,57,20,2],[37,0,21,2],[37,8,21,8,"paths"],[37,13,21,13],[37,16,21,16,"config"],[37,22,21,22],[37,23,21,23,"paths"],[37,28,21,16],[37,32,21,32],[37,34,21,2],[38,0,22,2],[38,8,22,8,"initialRouteParams"],[38,26,22,26],[38,29,22,29,"config"],[38,35,22,35],[38,36,22,36,"initialRouteParams"],[38,54,22,2],[39,0,23,2],[39,8,23,8,"initialRouteName"],[39,24,23,24],[39,27,23,27,"config"],[39,33,23,33],[39,34,23,34,"initialRouteName"],[39,50,23,27],[39,54,23,54,"order"],[39,59,23,59],[39,60,23,60],[39,61,23,59],[39,62,23,2],[40,0,24,2],[40,8,24,8,"backBehavior"],[40,20,24,20],[40,23,24,23,"config"],[40,29,24,29],[40,30,24,30,"backBehavior"],[40,42,24,23],[40,46,24,46],[40,52,24,2],[41,0,25,2],[41,8,25,8,"shouldBackNavigateToInitialRoute"],[41,40,25,40],[41,43,25,43,"backBehavior"],[41,55,25,55],[41,60,25,60],[41,74,25,2],[42,0,26,2],[42,8,26,8,"resetOnBlur"],[42,19,26,19],[42,22,26,22,"config"],[42,28,26,28],[42,29,26,29,"hasOwnProperty"],[42,43,26,22],[42,44,26,44],[42,57,26,22],[42,61,27,6,"config"],[42,67,27,12],[42,68,27,13,"resetOnBlur"],[42,79,26,22],[42,82,28,6],[42,86,26,2],[43,0,29,2],[43,8,29,8,"initialRouteIndex"],[43,25,29,25],[43,28,29,28,"order"],[43,33,29,33],[43,34,29,34,"indexOf"],[43,41,29,28],[43,42,29,42,"initialRouteName"],[43,58,29,28],[43,59,29,2],[44,0,30,2],[44,8,30,8,"childRouters"],[44,20,30,20],[44,23,30,23],[44,25,30,2],[45,0,32,2,"order"],[45,4,32,2,"order"],[45,9,32,7],[45,10,32,8,"forEach"],[45,17,32,2],[45,18,32,16],[45,28,32,16,"routeName"],[45,37,32,25],[45,39,32,29],[46,0,33,4],[46,10,33,10,"routeConfig"],[46,21,33,21],[46,24,33,24,"routeConfigs"],[46,36,33,36],[46,37,33,37,"routeName"],[46,46,33,36],[46,47,33,4],[47,0,34,4,"paths"],[47,6,34,4,"paths"],[47,11,34,9],[47,12,34,10,"routeName"],[47,21,34,9],[47,22,34,4],[47,25,35,6],[47,32,35,13,"routeConfig"],[47,43,35,24],[47,44,35,25,"path"],[47,48,35,6],[47,53,35,34],[47,61,35,6],[47,64,35,45,"routeConfig"],[47,75,35,56],[47,76,35,57,"path"],[47,80,35,6],[47,83,35,64,"routeName"],[47,92,34,4],[48,0,36,4,"childRouters"],[48,6,36,4,"childRouters"],[48,18,36,16],[48,19,36,17,"routeName"],[48,28,36,16],[48,29,36,4],[48,32,36,30],[48,36,36,4],[49,0,37,4],[49,10,37,10,"screen"],[49,16,37,16],[49,19,37,19],[49,55,37,41,"routeConfigs"],[49,67,37,19],[49,69,37,55,"routeName"],[49,78,37,19],[49,79,37,4],[51,0,38,4],[51,10,38,8,"screen"],[51,16,38,14],[51,17,38,15,"router"],[51,23,38,4],[51,25,38,23],[52,0,39,6,"childRouters"],[52,8,39,6,"childRouters"],[52,20,39,18],[52,21,39,19,"routeName"],[52,30,39,18],[52,31,39,6],[52,34,39,32,"screen"],[52,40,39,38],[52,41,39,39,"router"],[52,47,39,6],[53,0,40,5],[54,0,41,3],[54,5,32,2],[56,0,42,2],[56,8,42,6,"initialRouteIndex"],[56,25,42,23],[56,30,42,28],[56,31,42,29],[56,32,42,2],[56,34,42,32],[57,0,43,4],[57,12,43,10],[57,16,43,14,"Error"],[57,21,43,10],[57,22,44,6],[57,53,44,35,"initialRouteName"],[57,69,44,6],[57,102,45,28,"order"],[57,107,45,33],[57,108,45,34,"map"],[57,111,45,28],[57,112,45,38],[57,122,45,38,"n"],[57,123,45,39],[58,0,45,39],[58,22,45,47,"n"],[58,23,45,39],[59,0,45,39],[59,7,45,28],[59,9,45,53,"join"],[59,13,45,28],[59,14,45,58],[59,18,45,28],[59,19,44,6],[59,20,43,10],[59,21,43,4],[60,0,47,3],[62,0,49,2],[62,13,49,11,"resetChildRoute"],[62,28,49,2],[62,29,49,27,"routeName"],[62,38,49,2],[62,40,49,38],[63,0,50,4],[63,10,50,10,"params"],[63,16,50,16],[63,19,51,6,"routeName"],[63,28,51,15],[63,33,51,20,"initialRouteName"],[63,49,51,6],[63,52,51,39,"initialRouteParams"],[63,70,51,6],[63,73,51,60,"undefined"],[63,82,50,4],[64,0,52,4],[64,10,52,10,"childRouter"],[64,21,52,21],[64,24,52,24,"childRouters"],[64,36,52,36],[64,37,52,37,"routeName"],[64,46,52,36],[64,47,52,4],[66,0,53,4],[66,10,53,8,"childRouter"],[66,21,53,4],[66,23,53,21],[67,0,54,6],[67,12,54,12,"childAction"],[67,23,54,23],[67,26,54,26,"NavigationActions"],[67,53,54,44,"init"],[67,57,54,26],[67,59,54,6],[69,0,55,6],[69,33,56,11,"childRouter"],[69,44,56,22],[69,45,56,23,"getStateForAction"],[69,62,56,11],[69,63,56,41,"childAction"],[69,74,56,11],[69,75,55,6],[70,0,57,8,"key"],[70,10,57,8,"key"],[70,13,57,11],[70,15,57,13,"routeName"],[70,24,55,6],[71,0,58,8,"routeName"],[71,10,58,8,"routeName"],[71,19,58,17],[71,21,58,8,"routeName"],[71,30,55,6],[72,0,59,8,"params"],[72,10,59,8,"params"],[72,16,59,14],[72,18,59,8,"params"],[73,0,55,6],[74,0,61,5],[76,0,62,4],[76,13,62,11],[77,0,63,6,"key"],[77,8,63,6,"key"],[77,11,63,9],[77,13,63,11,"routeName"],[77,22,62,11],[78,0,64,6,"routeName"],[78,8,64,6,"routeName"],[78,17,64,15],[78,19,64,6,"routeName"],[78,28,62,11],[79,0,65,6,"params"],[79,8,65,6,"params"],[79,14,65,12],[79,16,65,6,"params"],[80,0,62,11],[80,7,62,4],[81,0,67,3],[83,0,69,2],[83,11,69,9],[84,0,70,4,"getInitialState"],[84,6,70,4,"getInitialState"],[84,21,69,9],[84,50,70,22],[85,0,71,6],[85,12,71,12,"routes"],[85,18,71,18],[85,21,71,21,"order"],[85,26,71,26],[85,27,71,27,"map"],[85,30,71,21],[85,31,71,31,"resetChildRoute"],[85,46,71,21],[85,47,71,6],[86,0,72,6],[86,15,72,13],[87,0,73,8,"routes"],[87,10,73,8,"routes"],[87,16,73,14],[87,18,73,8,"routes"],[87,24,72,13],[88,0,74,8,"index"],[88,10,74,8,"index"],[88,15,74,13],[88,17,74,15,"initialRouteIndex"],[88,34,72,13],[89,0,75,8,"isTransitioning"],[89,10,75,8,"isTransitioning"],[89,25,75,23],[89,27,75,25],[90,0,72,13],[90,9,72,6],[91,0,77,5],[91,7,69,9],[92,0,79,4,"getNextState"],[92,6,79,4,"getNextState"],[92,18,69,9],[92,42,79,17,"prevState"],[92,51,69,9],[92,53,79,28,"possibleNextState"],[92,70,69,9],[92,72,79,47],[93,0,80,6],[93,12,80,10],[93,13,80,11,"prevState"],[93,22,80,6],[93,24,80,22],[94,0,81,8],[94,17,81,15,"possibleNextState"],[94,34,81,8],[95,0,82,7],[97,0,84,6],[97,12,84,10,"nextState"],[97,21,84,6],[99,0,85,6],[99,12,85,10,"prevState"],[99,21,85,19],[99,22,85,20,"index"],[99,27,85,10],[99,32,85,30,"possibleNextState"],[99,49,85,47],[99,50,85,48,"index"],[99,55,85,10],[99,59,85,57,"resetOnBlur"],[99,70,85,6],[99,72,85,70],[100,0,86,8],[100,14,86,14,"prevRouteName"],[100,27,86,27],[100,30,86,30,"prevState"],[100,39,86,39],[100,40,86,40,"routes"],[100,46,86,30],[100,47,86,47,"prevState"],[100,56,86,56],[100,57,86,57,"index"],[100,62,86,30],[100,64,86,64,"routeName"],[100,73,86,8],[101,0,87,8],[101,14,87,14,"nextRoutes"],[101,24,87,24],[101,60,87,31,"possibleNextState"],[101,77,87,48],[101,78,87,49,"routes"],[101,84,87,24],[101,85,87,8],[102,0,88,8,"nextRoutes"],[102,10,88,8,"nextRoutes"],[102,20,88,18],[102,21,88,19,"prevState"],[102,30,88,28],[102,31,88,29,"index"],[102,36,88,18],[102,37,88,8],[102,40,88,38,"resetChildRoute"],[102,55,88,53],[102,56,88,54,"prevRouteName"],[102,69,88,53],[102,70,88,8],[103,0,90,8],[103,35,91,13,"possibleNextState"],[103,52,90,8],[104,0,92,10,"routes"],[104,12,92,10,"routes"],[104,18,92,16],[104,20,92,18,"nextRoutes"],[105,0,90,8],[106,0,94,7],[106,9,85,6],[106,15,94,13],[107,0,95,8,"nextState"],[107,10,95,8,"nextState"],[107,19,95,17],[107,22,95,20,"possibleNextState"],[107,39,95,8],[108,0,96,7],[110,0,98,6],[110,15,98,13,"nextState"],[110,24,98,6],[111,0,99,5],[111,7,69,9],[112,0,101,4,"getStateForAction"],[112,6,101,4,"getStateForAction"],[112,23,69,9],[112,52,101,22,"action"],[112,58,69,9],[112,60,101,30,"inputState"],[112,70,69,9],[112,72,101,42],[113,0,102,6],[113,12,102,10,"prevState"],[113,21,102,19],[113,24,102,22,"inputState"],[113,34,102,32],[113,55,102,40,"inputState"],[113,65,102,32],[113,69,102,55,"inputState"],[113,79,102,6],[114,0,103,6],[114,12,103,10,"state"],[114,17,103,15],[114,20,103,18,"inputState"],[114,30,103,28],[114,34,103,32],[114,39,103,37,"getInitialState"],[114,54,103,32],[114,56,103,6],[115,0,104,6],[115,12,104,10,"activeChildIndex"],[115,28,104,26],[115,31,104,29,"state"],[115,36,104,34],[115,37,104,35,"index"],[115,42,104,6],[117,0,106,6],[117,12,106,10,"action"],[117,18,106,16],[117,19,106,17,"type"],[117,23,106,10],[117,28,106,26,"NavigationActions"],[117,55,106,44,"INIT"],[117,59,106,6],[117,61,106,50],[118,0,106,50],[118,14,111,16,"params"],[118,20,106,50],[118,23,111,27,"action"],[118,29,106,50],[118,30,111,16,"params"],[118,36,106,50],[120,0,112,8],[120,14,112,12,"params"],[120,20,112,8],[120,22,112,20],[121,0,113,10,"state"],[121,12,113,10,"state"],[121,17,113,15],[121,18,113,16,"routes"],[121,24,113,10],[121,27,113,25,"state"],[121,32,113,30],[121,33,113,31,"routes"],[121,39,113,25],[121,40,113,38,"map"],[121,43,113,25],[121,44,113,42],[121,54,113,42,"route"],[121,59,113,47],[122,0,113,47],[122,39,114,15,"route"],[122,44,113,47],[123,0,115,12,"params"],[123,16,115,12,"params"],[123,22,115,18],[123,42,116,17,"route"],[123,47,116,22],[123,48,116,23,"params"],[123,54,115,18],[123,60,117,17,"params"],[123,66,115,18],[123,72,118,18,"route"],[123,77,118,23],[123,78,118,24,"routeName"],[123,87,118,18],[123,92,118,38,"initialRouteName"],[123,108,118,18],[123,111,119,18,"initialRouteParams"],[123,129,118,18],[123,132,120,18],[123,136,115,18],[124,0,113,47],[125,0,113,47],[125,13,113,25],[125,14,113,10],[126,0,123,9],[127,0,124,7],[129,0,127,6],[129,12,127,12,"activeChildLastState"],[129,32,127,32],[129,35,127,35,"state"],[129,40,127,40],[129,41,127,41,"routes"],[129,47,127,35],[129,48,127,48,"state"],[129,53,127,53],[129,54,127,54,"index"],[129,59,127,35],[129,60,127,6],[130,0,128,6],[130,12,128,12,"activeChildRouter"],[130,29,128,29],[130,32,128,32,"childRouters"],[130,44,128,44],[130,45,128,45,"order"],[130,50,128,50],[130,51,128,51,"state"],[130,56,128,56],[130,57,128,57,"index"],[130,62,128,50],[130,63,128,44],[130,64,128,6],[132,0,129,6],[132,12,129,10,"activeChildRouter"],[132,29,129,6],[132,31,129,29],[133,0,130,8],[133,14,130,14,"activeChildState"],[133,30,130,30],[133,33,130,33,"activeChildRouter"],[133,50,130,50],[133,51,130,51,"getStateForAction"],[133,68,130,33],[133,69,131,10,"action"],[133,75,130,33],[133,77,132,10,"activeChildLastState"],[133,97,130,33],[133,98,130,8],[135,0,134,8],[135,14,134,12],[135,15,134,13,"activeChildState"],[135,31,134,12],[135,35,134,33,"inputState"],[135,45,134,8],[135,47,134,45],[136,0,135,10],[136,19,135,17],[136,23,135,10],[137,0,136,9],[139,0,137,8],[139,14,137,12,"activeChildState"],[139,30,137,28],[139,34,137,32,"activeChildState"],[139,50,137,48],[139,55,137,53,"activeChildLastState"],[139,75,137,8],[139,77,137,75],[140,0,138,10],[140,16,138,16,"routes"],[140,23,138,22],[140,59,138,29,"state"],[140,64,138,34],[140,65,138,35,"routes"],[140,71,138,22],[140,72,138,10],[142,0,139,10,"routes"],[142,12,139,10,"routes"],[142,19,139,16],[142,20,139,17,"state"],[142,25,139,22],[142,26,139,23,"index"],[142,31,139,16],[142,32,139,10],[142,35,139,32,"activeChildState"],[142,51,139,10],[143,0,140,10],[143,19,140,17],[143,24,140,22,"getNextState"],[143,36,140,17],[143,37,140,35,"prevState"],[143,46,140,17],[143,66,141,15,"state"],[143,71,140,17],[144,0,142,12,"routes"],[144,14,142,12,"routes"],[144,20,142,18],[144,22,142,12,"routes"],[145,0,140,17],[145,15,140,10],[146,0,144,9],[147,0,145,7],[149,0,149,6],[149,12,149,10,"backBehavior"],[149,24,149,22],[149,29,149,27],[149,35,149,6],[149,37,149,35],[150,0,150,8],[150,14,150,14,"isBackEligible"],[150,28,150,28],[150,31,151,10,"action"],[150,37,151,16],[150,38,151,17,"key"],[150,41,151,10],[150,45,151,24],[150,49,151,10],[150,53,151,32,"action"],[150,59,151,38],[150,60,151,39,"key"],[150,63,151,32],[150,68,151,47,"activeChildLastState"],[150,88,151,67],[150,89,151,68,"key"],[150,92,150,8],[152,0,152,8],[152,14,152,12,"action"],[152,20,152,18],[152,21,152,19,"type"],[152,25,152,12],[152,30,152,28,"NavigationActions"],[152,57,152,46,"BACK"],[152,61,152,8],[152,63,152,52],[153,0,153,10],[153,16,153,14,"isBackEligible"],[153,30,153,28],[153,34,153,32,"shouldBackNavigateToInitialRoute"],[153,66,153,10],[153,68,153,66],[154,0,154,12,"activeChildIndex"],[154,14,154,12,"activeChildIndex"],[154,30,154,28],[154,33,154,31,"initialRouteIndex"],[154,50,154,12],[155,0,155,11],[155,13,153,10],[155,19,155,17],[156,0,156,12],[156,21,156,19,"state"],[156,26,156,12],[157,0,157,11],[158,0,158,9],[159,0,159,7],[161,0,161,6],[161,12,161,10,"didNavigate"],[161,23,161,21],[161,26,161,24],[161,31,161,6],[163,0,162,6],[163,12,162,10,"action"],[163,18,162,16],[163,19,162,17,"type"],[163,23,162,10],[163,28,162,26,"NavigationActions"],[163,55,162,44,"NAVIGATE"],[163,63,162,6],[163,65,162,54],[164,0,163,8],[164,14,163,14,"navigateAction"],[164,28,163,28],[164,31,163,31,"action"],[164,37,163,8],[165,0,164,8,"didNavigate"],[165,10,164,8,"didNavigate"],[165,21,164,19],[165,24,164,22],[165,25,164,23],[165,26,164,24,"order"],[165,31,164,29],[165,32,164,30,"find"],[165,36,164,24],[165,37,164,35],[165,47,164,36,"childId"],[165,54,164,35],[165,56,164,45,"i"],[165,57,164,35],[165,59,164,51],[166,0,165,10],[166,16,165,14,"childId"],[166,23,165,21],[166,28,165,26,"navigateAction"],[166,42,165,40],[166,43,165,41,"routeName"],[166,52,165,10],[166,54,165,52],[167,0,166,12,"activeChildIndex"],[167,14,166,12,"activeChildIndex"],[167,30,166,28],[167,33,166,31,"i"],[167,34,166,12],[168,0,167,12],[168,21,167,19],[168,25,167,12],[169,0,168,11],[171,0,169,10],[171,19,169,17],[171,24,169,10],[172,0,170,9],[172,11,164,24],[172,12,164,8],[174,0,171,8],[174,14,171,12,"didNavigate"],[174,25,171,8],[174,27,171,25],[175,0,172,10],[175,16,172,16,"childState"],[175,26,172,26],[175,29,172,29,"state"],[175,34,172,34],[175,35,172,35,"routes"],[175,41,172,29],[175,42,172,42,"activeChildIndex"],[175,58,172,29],[175,59,172,10],[176,0,173,10],[176,16,173,14,"newChildState"],[176,29,173,10],[177,0,175,10],[177,16,175,16,"childRouter"],[177,27,175,27],[177,30,175,30,"childRouters"],[177,42,175,42],[177,43,175,43,"action"],[177,49,175,49],[177,50,175,50,"routeName"],[177,59,175,42],[177,60,175,10],[179,0,177,10],[179,16,177,14,"action"],[179,22,177,20],[179,23,177,21,"action"],[179,29,177,10],[179,31,177,29],[180,0,178,12,"newChildState"],[180,14,178,12,"newChildState"],[180,27,178,25],[180,30,178,28,"childRouter"],[180,41,178,39],[180,44,179,16,"childRouter"],[180,55,179,27],[180,56,179,28,"getStateForAction"],[180,73,179,16],[180,74,179,46,"action"],[180,80,179,52],[180,81,179,53,"action"],[180,87,179,16],[180,89,179,61,"childState"],[180,99,179,16],[180,100,178,39],[180,103,180,16],[180,107,178,12],[181,0,181,11],[181,13,177,10],[181,19,181,17],[181,23,181,21],[181,24,181,22,"childRouter"],[181,35,181,21],[181,39,181,37,"action"],[181,45,181,43],[181,46,181,44,"params"],[181,52,181,17],[181,54,181,52],[182,0,182,12,"newChildState"],[182,14,182,12,"newChildState"],[182,27,182,25],[182,48,183,17,"childState"],[182,58,182,25],[183,0,184,14,"params"],[183,16,184,14,"params"],[183,22,184,20],[183,42,185,20,"childState"],[183,52,185,30],[183,53,185,31,"params"],[183,59,185,20],[183,63,185,41],[183,65,184,20],[183,71,186,19,"action"],[183,77,186,25],[183,78,186,26,"params"],[183,84,184,20],[184,0,182,25],[184,16,182,12],[185,0,189,11],[187,0,191,10],[187,16,191,14,"newChildState"],[187,29,191,27],[187,33,191,31,"newChildState"],[187,46,191,44],[187,51,191,49,"childState"],[187,61,191,10],[187,63,191,61],[188,0,192,12],[188,18,192,18,"routes"],[188,26,192,24],[188,62,192,31,"state"],[188,67,192,36],[188,68,192,37,"routes"],[188,74,192,24],[188,75,192,12],[190,0,193,12,"routes"],[190,14,193,12,"routes"],[190,22,193,18],[190,23,193,19,"activeChildIndex"],[190,39,193,18],[190,40,193,12],[190,43,193,39,"newChildState"],[190,56,193,12],[191,0,194,12],[191,21,194,19],[191,26,194,24,"getNextState"],[191,38,194,19],[191,39,194,37,"prevState"],[191,48,194,19],[191,68,195,17,"state"],[191,73,194,19],[192,0,196,14,"routes"],[192,16,196,14,"routes"],[192,22,196,20],[192,24,196,14,"routes"],[192,32,194,19],[193,0,197,14,"index"],[193,16,197,14,"index"],[193,21,197,19],[193,23,197,21,"activeChildIndex"],[194,0,194,19],[194,17,194,12],[195,0,199,11],[196,0,200,9],[197,0,201,7],[199,0,203,6],[199,12,203,10,"action"],[199,18,203,16],[199,19,203,17,"type"],[199,23,203,10],[199,28,203,26,"NavigationActions"],[199,55,203,44,"SET_PARAMS"],[199,65,203,6],[199,67,203,56],[200,0,204,8],[200,14,204,14,"key"],[200,17,204,17],[200,20,204,20,"action"],[200,26,204,26],[200,27,204,27,"key"],[200,30,204,8],[201,0,205,8],[201,14,205,14,"lastRoute"],[201,23,205,23],[201,26,205,26,"state"],[201,31,205,31],[201,32,205,32,"routes"],[201,38,205,26],[201,39,205,39,"find"],[201,43,205,26],[201,44,205,44],[201,54,205,44,"route"],[201,59,205,49],[202,0,205,49],[202,19,205,53,"route"],[202,24,205,58],[202,25,205,59,"key"],[202,28,205,53],[202,33,205,67,"key"],[202,36,205,49],[203,0,205,49],[203,11,205,26],[203,12,205,8],[205,0,206,8],[205,14,206,12,"lastRoute"],[205,23,206,8],[205,25,206,23],[206,0,207,10],[206,16,207,16,"params"],[206,23,207,22],[206,44,208,15,"lastRoute"],[206,53,208,24],[206,54,208,25,"params"],[206,60,207,22],[206,66,209,15,"action"],[206,72,209,21],[206,73,209,22,"params"],[206,79,207,22],[206,80,207,10],[208,0,211,10],[208,16,211,16,"routes"],[208,24,211,22],[208,60,211,29,"state"],[208,65,211,34],[208,66,211,35,"routes"],[208,72,211,22],[208,73,211,10],[210,0,212,10,"routes"],[210,12,212,10,"routes"],[210,20,212,16],[210,21,212,17,"state"],[210,26,212,22],[210,27,212,23,"routes"],[210,33,212,17],[210,34,212,30,"indexOf"],[210,41,212,17],[210,42,212,38,"lastRoute"],[210,51,212,17],[210,52,212,16],[210,53,212,10],[210,74,213,15,"lastRoute"],[210,83,212,10],[211,0,214,12,"params"],[211,14,214,12,"params"],[211,20,214,18],[211,22,214,12,"params"],[212,0,212,10],[213,0,216,10],[213,19,216,17],[213,24,216,22,"getNextState"],[213,36,216,17],[213,37,216,35,"prevState"],[213,46,216,17],[213,66,217,15,"state"],[213,71,216,17],[214,0,218,12,"routes"],[214,14,218,12,"routes"],[214,20,218,18],[214,22,218,12,"routes"],[215,0,216,17],[215,15,216,10],[216,0,220,9],[217,0,221,7],[219,0,223,6],[219,12,223,10,"activeChildIndex"],[219,28,223,26],[219,33,223,31,"state"],[219,38,223,36],[219,39,223,37,"index"],[219,44,223,6],[219,46,223,44],[220,0,224,8],[220,17,224,15],[220,22,224,20,"getNextState"],[220,34,224,15],[220,35,224,33,"prevState"],[220,44,224,15],[220,64,225,13,"state"],[220,69,224,15],[221,0,226,10,"index"],[221,12,226,10,"index"],[221,17,226,15],[221,19,226,17,"activeChildIndex"],[222,0,224,15],[222,13,224,8],[223,0,228,7],[223,9,223,6],[223,15,228,13],[223,19,228,17,"didNavigate"],[223,30,228,28],[223,34,228,32],[223,35,228,33,"inputState"],[223,45,228,13],[223,47,228,45],[224,0,229,8],[224,17,229,15,"state"],[224,22,229,8],[225,0,230,7],[225,9,228,13],[225,15,230,13],[225,19,230,17,"didNavigate"],[225,30,230,13],[225,32,230,30],[226,0,231,8],[226,17,231,15],[226,21,231,8],[227,0,232,7],[229,0,235,6],[229,12,235,10,"index"],[229,17,235,15],[229,20,235,18,"state"],[229,25,235,23],[229,26,235,24,"index"],[229,31,235,6],[230,0,236,6],[230,12,236,10,"routes"],[230,18,236,16],[230,21,236,19,"state"],[230,26,236,24],[230,27,236,25,"routes"],[230,33,236,6],[231,0,237,6,"order"],[231,8,237,6,"order"],[231,13,237,11],[231,14,237,12,"find"],[231,18,237,6],[231,19,237,17],[231,29,237,18,"childId"],[231,36,237,17],[231,38,237,27,"i"],[231,39,237,17],[231,41,237,33],[232,0,238,8],[232,14,238,14,"childRouter"],[232,25,238,25],[232,28,238,28,"childRouters"],[232,40,238,40],[232,41,238,41,"childId"],[232,48,238,40],[232,49,238,8],[234,0,239,8],[234,14,239,12,"i"],[234,15,239,13],[234,20,239,18,"index"],[234,25,239,8],[234,27,239,25],[235,0,240,10],[235,19,240,17],[235,24,240,10],[236,0,241,9],[238,0,242,8],[238,14,242,12,"childState"],[238,24,242,22],[238,27,242,25,"routes"],[238,33,242,31],[238,34,242,32,"i"],[238,35,242,31],[238,36,242,8],[240,0,243,8],[240,14,243,12,"childRouter"],[240,25,243,8],[240,27,243,25],[241,0,244,10,"childState"],[241,12,244,10,"childState"],[241,22,244,20],[241,25,244,23,"childRouter"],[241,36,244,34],[241,37,244,35,"getStateForAction"],[241,54,244,23],[241,55,244,53,"action"],[241,61,244,23],[241,63,244,61,"childState"],[241,73,244,23],[241,74,244,10],[242,0,245,9],[244,0,246,8],[244,14,246,12],[244,15,246,13,"childState"],[244,25,246,8],[244,27,246,25],[245,0,247,10,"index"],[245,12,247,10,"index"],[245,17,247,15],[245,20,247,18,"i"],[245,21,247,10],[246,0,248,10],[246,19,248,17],[246,23,248,10],[247,0,249,9],[249,0,250,8],[249,14,250,12,"childState"],[249,24,250,22],[249,29,250,27,"routes"],[249,35,250,33],[249,36,250,34,"i"],[249,37,250,33],[249,38,250,8],[249,40,250,38],[250,0,251,10,"routes"],[250,12,251,10,"routes"],[250,18,251,16],[250,54,251,23,"routes"],[250,60,251,16],[250,61,251,10],[251,0,252,10,"routes"],[251,12,252,10,"routes"],[251,18,252,16],[251,19,252,17,"i"],[251,20,252,16],[251,21,252,10],[251,24,252,22,"childState"],[251,34,252,10],[252,0,253,10,"index"],[252,12,253,10,"index"],[252,17,253,15],[252,20,253,18,"i"],[252,21,253,10],[253,0,254,10],[253,19,254,17],[253,23,254,10],[254,0,255,9],[256,0,256,8],[256,17,256,15],[256,22,256,8],[257,0,257,7],[257,9,237,6],[259,0,263,6],[259,12,263,10,"childrenUpdateWithoutSwitchingIndex"],[259,47,263,45],[259,48,263,46,"action"],[259,54,263,52],[259,55,263,53,"type"],[259,59,263,45],[259,60,263,6],[259,62,263,60],[260,0,264,8,"index"],[260,10,264,8,"index"],[260,15,264,13],[260,18,264,16,"state"],[260,23,264,21],[260,24,264,22,"index"],[260,29,264,8],[261,0,265,7],[263,0,267,6],[263,12,267,10,"index"],[263,17,267,15],[263,22,267,20,"state"],[263,27,267,25],[263,28,267,26,"index"],[263,33,267,10],[263,37,267,35,"routes"],[263,43,267,41],[263,48,267,46,"state"],[263,53,267,51],[263,54,267,52,"routes"],[263,60,267,6],[263,62,267,60],[264,0,268,8],[264,17,268,15],[264,22,268,20,"getNextState"],[264,34,268,15],[264,35,268,33,"prevState"],[264,44,268,15],[264,64,269,13,"state"],[264,69,268,15],[265,0,270,10,"index"],[265,12,270,10,"index"],[265,17,270,15],[265,19,270,10,"index"],[265,24,268,15],[266,0,271,10,"routes"],[266,12,271,10,"routes"],[266,18,271,16],[266,20,271,10,"routes"],[267,0,268,15],[267,13,268,8],[268,0,273,7],[270,0,274,6],[270,15,274,13,"state"],[270,20,274,6],[271,0,275,5],[271,7,69,9],[272,0,277,4,"getComponentForState"],[272,6,277,4,"getComponentForState"],[272,26,69,9],[272,58,277,25,"state"],[272,63,69,9],[272,65,277,32],[273,0,278,6],[273,12,278,12,"routeName"],[273,21,278,21],[273,24,278,24,"state"],[273,29,278,29],[273,30,278,30,"routes"],[273,36,278,24],[273,37,278,37,"state"],[273,42,278,42],[273,43,278,43,"index"],[273,48,278,24],[273,50,278,50,"routeName"],[273,59,278,6],[274,0,279,6],[274,32,280,8,"routeName"],[274,41,279,6],[274,84,281,47,"state"],[274,89,281,52],[274,90,281,53,"index"],[274,95,279,6],[275,0,284,6],[275,12,284,12,"childRouter"],[275,23,284,23],[275,26,284,26,"childRouters"],[275,38,284,38],[275,39,284,39,"routeName"],[275,48,284,38],[275,49,284,6],[277,0,285,6],[277,12,285,10,"childRouter"],[277,23,285,6],[277,25,285,23],[278,0,286,8],[278,17,286,15,"childRouter"],[278,28,286,26],[278,29,286,27,"getComponentForState"],[278,49,286,15],[278,50,286,48,"state"],[278,55,286,53],[278,56,286,54,"routes"],[278,62,286,48],[278,63,286,61,"state"],[278,68,286,66],[278,69,286,67,"index"],[278,74,286,48],[278,75,286,15],[278,76,286,8],[279,0,287,7],[281,0,288,6],[281,15,288,13],[281,51,288,35,"routeConfigs"],[281,63,288,13],[281,65,288,49,"routeName"],[281,74,288,13],[281,75,288,6],[282,0,289,5],[282,7,69,9],[283,0,291,4,"getComponentForRouteName"],[283,6,291,4,"getComponentForRouteName"],[283,30,69,9],[283,66,291,29,"routeName"],[283,75,69,9],[283,77,291,40],[284,0,292,6],[284,15,292,13],[284,51,292,35,"routeConfigs"],[284,63,292,13],[284,65,292,49,"routeName"],[284,74,292,13],[284,75,292,6],[285,0,293,5],[285,7,69,9],[286,0,295,4,"getPathAndParamsForState"],[286,6,295,4,"getPathAndParamsForState"],[286,30,69,9],[286,66,295,29,"state"],[286,71,69,9],[286,73,295,36],[287,0,296,6],[287,12,296,12,"route"],[287,17,296,17],[287,20,296,20,"state"],[287,25,296,25],[287,26,296,26,"routes"],[287,32,296,20],[287,33,296,33,"state"],[287,38,296,38],[287,39,296,39,"index"],[287,44,296,20],[287,45,296,6],[288,0,297,6],[288,12,297,12,"routeName"],[288,21,297,21],[288,24,297,24,"order"],[288,29,297,29],[288,30,297,30,"state"],[288,35,297,35],[288,36,297,36,"index"],[288,41,297,29],[288,42,297,6],[289,0,298,6],[289,12,298,12,"subPath"],[289,19,298,19],[289,22,298,22,"paths"],[289,27,298,27],[289,28,298,28,"routeName"],[289,37,298,27],[289,38,298,6],[290,0,299,6],[290,12,299,12,"screen"],[290,18,299,18],[290,21,299,21],[290,57,299,43,"routeConfigs"],[290,69,299,21],[290,71,299,57,"routeName"],[290,80,299,21],[290,81,299,6],[291,0,300,6],[291,12,300,10,"path"],[291,16,300,14],[291,19,300,17,"subPath"],[291,26,300,6],[292,0,301,6],[292,12,301,10,"params"],[292,18,301,16],[292,21,301,19,"route"],[292,26,301,24],[292,27,301,25,"params"],[292,33,301,6],[294,0,302,6],[294,12,302,10,"screen"],[294,18,302,16],[294,22,302,20,"screen"],[294,28,302,26],[294,29,302,27,"router"],[294,35,302,6],[294,37,302,35],[295,0,303,8],[295,14,303,14,"stateRoute"],[295,24,303,24],[295,27,303,27,"route"],[295,32,303,8],[296,0,306,8],[296,14,306,14,"child"],[296,19,306,19],[296,22,306,22,"screen"],[296,28,306,28],[296,29,306,29,"router"],[296,35,306,22],[296,36,306,36,"getPathAndParamsForState"],[296,60,306,22],[296,61,306,61,"stateRoute"],[296,71,306,22],[296,72,306,8],[297,0,307,8,"path"],[297,10,307,8,"path"],[297,14,307,12],[297,17,307,15,"subPath"],[297,24,307,22],[297,27,307,28,"subPath"],[297,34,307,22],[297,43,307,39,"child"],[297,48,307,44],[297,49,307,45,"path"],[297,53,307,22],[297,56,307,54,"child"],[297,61,307,59],[297,62,307,60,"path"],[297,66,307,8],[298,0,308,8,"params"],[298,10,308,8,"params"],[298,16,308,14],[298,19,308,17,"child"],[298,24,308,22],[298,25,308,23,"params"],[298,31,308,17],[298,52,308,37,"params"],[298,58,308,17],[298,64,308,48,"child"],[298,69,308,53],[298,70,308,54,"params"],[298,76,308,17],[298,80,308,65,"params"],[298,86,308,8],[299,0,309,7],[301,0,310,6],[301,15,310,13],[302,0,311,8,"path"],[302,10,311,8,"path"],[302,14,311,12],[302,16,311,8,"path"],[302,20,310,13],[303,0,312,8,"params"],[303,10,312,8,"params"],[303,16,312,14],[303,18,312,8,"params"],[304,0,310,13],[304,9,310,6],[305,0,314,5],[305,7,69,9],[306,0,321,4,"getActionForPathAndParams"],[306,6,321,4,"getActionForPathAndParams"],[306,31,69,9],[306,68,321,30,"path"],[306,72,69,9],[306,74,321,36,"params"],[306,80,69,9],[306,82,321,44],[307,0,322,6],[307,15,323,8,"order"],[307,20,323,13],[307,21,324,11,"map"],[307,24,323,8],[307,25,324,15],[307,35,324,15,"childId"],[307,42,324,22],[307,44,324,26],[308,0,325,12],[308,14,325,18,"parts"],[308,19,325,23],[308,22,325,26,"path"],[308,26,325,30],[308,27,325,31,"split"],[308,32,325,26],[308,33,325,37],[308,36,325,26],[308,37,325,12],[309,0,326,12],[309,14,326,18,"pathToTest"],[309,24,326,28],[309,27,326,31,"paths"],[309,32,326,36],[309,33,326,37,"childId"],[309,40,326,36],[309,41,326,12],[311,0,327,12],[311,14,327,16,"parts"],[311,19,327,21],[311,20,327,22],[311,21,327,21],[311,22,327,16],[311,27,327,29,"pathToTest"],[311,37,327,12],[311,39,327,41],[312,0,328,14],[312,16,328,20,"childRouter"],[312,27,328,31],[312,30,328,34,"childRouters"],[312,42,328,46],[312,43,328,47,"childId"],[312,50,328,46],[312,51,328,14],[314,0,329,14],[314,16,329,20,"action"],[314,22,329,26],[314,25,329,29,"NavigationActions"],[314,52,329,47,"navigate"],[314,60,329,29],[314,61,329,56],[315,0,330,16,"routeName"],[315,14,330,16,"routeName"],[315,23,330,25],[315,25,330,27,"childId"],[316,0,329,56],[316,13,329,29],[316,14,329,14],[318,0,332,14],[318,16,332,18,"childRouter"],[318,27,332,29],[318,31,332,33,"childRouter"],[318,42,332,44],[318,43,332,45,"getActionForPathAndParams"],[318,68,332,14],[318,70,332,72],[319,0,333,16,"action"],[319,14,333,16,"action"],[319,20,333,22],[319,21,333,23,"action"],[319,27,333,16],[319,30,333,32,"childRouter"],[319,41,333,43],[319,42,333,44,"getActionForPathAndParams"],[319,67,333,32],[319,68,334,18,"parts"],[319,73,334,23],[319,74,334,24,"slice"],[319,79,334,18],[319,80,334,30],[319,81,334,18],[319,83,334,33,"join"],[319,87,334,18],[319,88,334,38],[319,91,334,18],[319,92,333,32],[319,94,335,18,"params"],[319,100,333,32],[319,101,333,16],[320,0,337,15],[320,13,332,14],[320,19,337,21],[320,23,337,25,"params"],[320,29,337,21],[320,31,337,33],[321,0,338,16,"action"],[321,14,338,16,"action"],[321,20,338,22],[321,21,338,23,"params"],[321,27,338,16],[321,30,338,32,"params"],[321,36,338,16],[322,0,339,15],[324,0,340,14],[324,19,340,21,"action"],[324,25,340,14],[325,0,341,13],[327,0,342,12],[327,17,342,19],[327,21,342,12],[328,0,343,11],[328,9,323,8],[328,11,344,11,"find"],[328,15,323,8],[328,16,344,16],[328,26,344,16,"action"],[328,32,344,22],[329,0,344,22],[329,17,344,26],[329,18,344,27],[329,19,344,28,"action"],[329,25,344,22],[330,0,344,22],[330,9,323,8],[330,14,345,8,"order"],[330,19,345,13],[330,20,346,11,"map"],[330,23,345,8],[330,24,346,15],[330,34,346,15,"childId"],[330,41,346,22],[330,43,346,26],[331,0,347,12],[331,14,347,18,"childRouter"],[331,25,347,29],[331,28,347,32,"childRouters"],[331,40,347,44],[331,41,347,45,"childId"],[331,48,347,44],[331,49,347,12],[332,0,348,12],[332,17,349,14,"childRouter"],[332,28,349,25],[332,32,349,29,"childRouter"],[332,43,349,40],[332,44,349,41,"getActionForPathAndParams"],[332,69,349,29],[332,70,349,67,"path"],[332,74,349,29],[332,76,349,73,"params"],[332,82,349,29],[332,83,348,12],[333,0,351,11],[333,9,345,8],[333,11,352,11,"find"],[333,15,345,8],[333,16,352,16],[333,26,352,16,"action"],[333,32,352,22],[334,0,352,22],[334,17,352,26],[334,18,352,27],[334,19,352,28,"action"],[334,25,352,22],[335,0,352,22],[335,9,345,8],[335,10,323,8],[335,14,353,8],[335,18,322,6],[336,0,355,5],[336,7,69,9],[337,0,357,4,"getScreenOptions"],[337,6,357,4,"getScreenOptions"],[337,22,357,20],[337,24,357,22],[337,57,358,6,"routeConfigs"],[337,69,357,22],[337,71,359,6,"config"],[337,77,359,12],[337,78,359,13,"navigationOptions"],[337,95,357,22],[337,96,69,9],[338,0,362,4,"getScreenConfig"],[338,6,362,4,"getScreenConfig"],[338,21,362,19],[338,23,362,21,"getScreenConfigDeprecated"],[339,0,69,9],[339,5,69,2],[340,0,364,1],[340,3]]},"type":"js/module"}]}