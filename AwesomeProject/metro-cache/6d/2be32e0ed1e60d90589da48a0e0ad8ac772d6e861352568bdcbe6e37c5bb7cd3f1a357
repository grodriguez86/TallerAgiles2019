{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"path-to-regexp","data":{"isAsync":false}},{"name":"../NavigationActions","data":{"isAsync":false}},{"name":"./createConfigGetter","data":{"isAsync":false}},{"name":"./getScreenForRouteName","data":{"isAsync":false}},{"name":"../StateUtils","data":{"isAsync":false}},{"name":"./validateRouteConfigMap","data":{"isAsync":false}},{"name":"./getScreenConfigDeprecated","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"./KeyGenerator","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _pathToRegexp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"path-to-regexp\"));\n\n  var _NavigationActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../NavigationActions\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./createConfigGetter\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./getScreenForRouteName\"));\n\n  var _StateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../StateUtils\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./validateRouteConfigMap\"));\n\n  var _getScreenConfigDeprecated = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./getScreenConfigDeprecated\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../utils/invariant\"));\n\n  var _KeyGenerator = _$$_REQUIRE(_dependencyMap[12], \"./KeyGenerator\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function isEmpty(obj) {\n    if (!obj) return true;\n\n    for (var key in obj) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function behavesLikePushAction(action) {\n    return action.type === _NavigationActions.default.NAVIGATE || action.type === _NavigationActions.default.PUSH;\n  }\n\n  var _default = function _default(routeConfigs) {\n    var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var childRouters = {};\n    var routeNames = Object.keys(routeConfigs);\n    routeNames.forEach(function (routeName) {\n      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n\n      if (screen && screen.router) {\n        childRouters[routeName] = screen.router;\n      } else {\n        childRouters[routeName] = null;\n      }\n    });\n    var initialRouteParams = stackConfig.initialRouteParams;\n    var initialRouteName = stackConfig.initialRouteName || routeNames[0];\n    var initialChildRouter = childRouters[initialRouteName];\n    var pathsByRouteNames = _objectSpread({}, stackConfig.paths) || {};\n    var paths = [];\n\n    function getInitialState(action) {\n      var route = {};\n      var childRouter = childRouters[action.routeName];\n\n      if (behavesLikePushAction(action) && childRouter !== undefined) {\n        var childState = {};\n\n        if (childRouter !== null) {\n          var childAction = action.action || _NavigationActions.default.init({\n            params: action.params\n          });\n\n          childState = childRouter.getStateForAction(childAction);\n        }\n\n        return {\n          key: 'StackRouterRoot',\n          isTransitioning: false,\n          index: 0,\n          routes: [_objectSpread({\n            params: action.params\n          }, childState, {\n            key: action.key || (0, _KeyGenerator.generateKey)(),\n            routeName: action.routeName\n          })]\n        };\n      }\n\n      if (initialChildRouter) {\n        route = initialChildRouter.getStateForAction(_NavigationActions.default.navigate({\n          routeName: initialRouteName,\n          params: initialRouteParams\n        }));\n      }\n\n      var params = (route.params || action.params || initialRouteParams) && _objectSpread({}, route.params || {}, {}, action.params || {}, {}, initialRouteParams || {});\n\n      var initialRouteKey = stackConfig.initialRouteKey;\n      route = _objectSpread({}, route, {}, params ? {\n        params: params\n      } : {}, {\n        routeName: initialRouteName,\n        key: action.key || initialRouteKey || (0, _KeyGenerator.generateKey)()\n      });\n      return {\n        key: 'StackRouterRoot',\n        isTransitioning: false,\n        index: 0,\n        routes: [route]\n      };\n    }\n\n    routeNames.forEach(function (routeName) {\n      var pathPattern = pathsByRouteNames[routeName] || routeConfigs[routeName].path;\n      var matchExact = !!pathPattern && !childRouters[routeName];\n\n      if (pathPattern === undefined) {\n        pathPattern = routeName;\n      }\n\n      var keys = [];\n      var re, toPath, priority;\n\n      if (typeof pathPattern === 'string') {\n        re = (0, _pathToRegexp.default)(pathPattern, keys);\n        toPath = _pathToRegexp.default.compile(pathPattern);\n        priority = 0;\n      } else {\n        re = (0, _pathToRegexp.default)('*', keys);\n\n        toPath = function toPath() {\n          return '';\n        };\n\n        matchExact = true;\n        priority = -1;\n      }\n\n      if (!matchExact) {\n        var wildcardRe = (0, _pathToRegexp.default)(pathPattern + \"/*\", keys);\n        re = new RegExp(\"(?:\" + re.source + \")|(?:\" + wildcardRe.source + \")\");\n      }\n\n      pathsByRouteNames[routeName] = {\n        re: re,\n        keys: keys,\n        toPath: toPath,\n        priority: priority\n      };\n    });\n    paths = Object.entries(pathsByRouteNames);\n    paths.sort(function (a, b) {\n      return b[1].priority - a[1].priority;\n    });\n    return {\n      getComponentForState: function getComponentForState(state) {\n        var activeChildRoute = state.routes[state.index];\n        var routeName = activeChildRoute.routeName;\n\n        if (childRouters[routeName]) {\n          return childRouters[routeName].getComponentForState(activeChildRoute);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return getInitialState(action);\n        }\n\n        if (action.type !== _NavigationActions.default.RESET || action.key !== null) {\n          var keyIndex = action.key ? _StateUtils.default.indexOf(state, action.key) : -1;\n          var childIndex = keyIndex >= 0 ? keyIndex : state.index;\n          var childRoute = state.routes[childIndex];\n          (0, _invariant.default)(childRoute, \"StateUtils erroneously thought index \" + childIndex + \" exists\");\n          var childRouter = childRouters[childRoute.routeName];\n\n          if (childRouter) {\n            var route = childRouter.getStateForAction(action, childRoute);\n\n            if (route === null) {\n              return state;\n            }\n\n            if (route && route !== childRoute) {\n              return _StateUtils.default.replaceAt(state, childRoute.key, route);\n            }\n          }\n        }\n\n        if (behavesLikePushAction(action) && childRouters[action.routeName] !== undefined) {\n          var _childRouter = childRouters[action.routeName];\n\n          var _route;\n\n          (0, _invariant.default)(action.type !== _NavigationActions.default.PUSH || action.key == null, 'StackRouter does not support key on the push action');\n\n          if (action.key) {\n            var lastRouteIndex = state.routes.findIndex(function (r) {\n              return r.key === action.key;\n            });\n\n            if (lastRouteIndex !== -1) {\n              if (state.index === lastRouteIndex && !action.params) {\n                return state;\n              }\n\n              var routes = state.routes.slice(0, lastRouteIndex + 1);\n\n              if (action.params) {\n                var _route2 = state.routes.find(function (r) {\n                  return r.key === action.key;\n                });\n\n                routes[lastRouteIndex] = _objectSpread({}, _route2, {\n                  params: _objectSpread({}, _route2.params, {}, action.params)\n                });\n              }\n\n              return _objectSpread({}, state, {\n                isTransitioning: state.index !== lastRouteIndex ? action.immediate !== true : undefined,\n                index: lastRouteIndex,\n                routes: routes\n              });\n            }\n          }\n\n          if (_childRouter) {\n            var childAction = action.action || _NavigationActions.default.init({\n              params: action.params\n            });\n\n            _route = _objectSpread({\n              params: action.params\n            }, _childRouter.getStateForAction(childAction), {\n              routeName: action.routeName,\n              key: action.key || (0, _KeyGenerator.generateKey)()\n            });\n          } else {\n            _route = {\n              params: action.params,\n              routeName: action.routeName,\n              key: action.key || (0, _KeyGenerator.generateKey)()\n            };\n          }\n\n          return _objectSpread({}, _StateUtils.default.push(state, _route), {\n            isTransitioning: action.immediate !== true\n          });\n        } else if (action.type === _NavigationActions.default.PUSH && childRouters[action.routeName] === undefined) {\n          return _objectSpread({}, state);\n        }\n\n        if (behavesLikePushAction(action)) {\n          var childRouterNames = Object.keys(childRouters);\n\n          for (var i = 0; i < childRouterNames.length; i++) {\n            var childRouterName = childRouterNames[i];\n            var _childRouter2 = childRouters[childRouterName];\n\n            if (_childRouter2) {\n              var initChildRoute = _childRouter2.getStateForAction(_NavigationActions.default.init());\n\n              var navigatedChildRoute = _childRouter2.getStateForAction(action, initChildRoute);\n\n              var routeToPush = null;\n\n              if (navigatedChildRoute === null) {\n                routeToPush = initChildRoute;\n              } else if (navigatedChildRoute !== initChildRoute) {\n                routeToPush = navigatedChildRoute;\n              }\n\n              if (routeToPush) {\n                var _route3 = _objectSpread({}, routeToPush, {\n                  routeName: childRouterName,\n                  key: action.key || (0, _KeyGenerator.generateKey)()\n                });\n\n                return _StateUtils.default.push(state, _route3);\n              }\n            }\n          }\n        }\n\n        if (action.type === _NavigationActions.default.POP_TO_TOP) {\n          if (action.key && state.key !== action.key) {\n            return state;\n          }\n\n          if (state.index === 0) {\n            return _objectSpread({}, state);\n          } else {\n            return _objectSpread({}, state, {\n              isTransitioning: action.immediate !== true,\n              index: 0,\n              routes: [state.routes[0]]\n            });\n          }\n\n          return state;\n        }\n\n        if (action.type === _NavigationActions.default.REPLACE) {\n          var routeIndex = state.routes.findIndex(function (r) {\n            return r.key === action.key;\n          });\n\n          if (routeIndex !== -1) {\n            var _childRouter3 = childRouters[action.routeName];\n            var childState = {};\n\n            if (_childRouter3) {\n              var _childAction = action.action || _NavigationActions.default.init({\n                params: action.params\n              });\n\n              childState = _childRouter3.getStateForAction(_childAction);\n            }\n\n            var _routes = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes[routeIndex] = _objectSpread({\n              params: action.params\n            }, childState, {\n              routeName: action.routeName,\n              key: action.newKey || (0, _KeyGenerator.generateKey)()\n            });\n            return _objectSpread({}, state, {\n              routes: _routes\n            });\n          }\n        }\n\n        if (action.type === _NavigationActions.default.COMPLETE_TRANSITION && (action.key == null || action.key === state.key) && state.isTransitioning) {\n          return _objectSpread({}, state, {\n            isTransitioning: false\n          });\n        }\n\n        if (action.type === _NavigationActions.default.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var params = _objectSpread({}, lastRoute.params, {}, action.params);\n\n            var _routes2 = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes2[state.routes.indexOf(lastRoute)] = _objectSpread({}, lastRoute, {\n              params: params\n            });\n            return _objectSpread({}, state, {\n              routes: _routes2\n            });\n          }\n        }\n\n        if (action.type === _NavigationActions.default.RESET) {\n          if (action.key != null && action.key != state.key) {\n            return state;\n          }\n\n          var newStackActions = action.actions;\n          return _objectSpread({}, state, {\n            routes: newStackActions.map(function (newStackAction) {\n              var router = childRouters[newStackAction.routeName];\n              var childState = {};\n\n              if (router) {\n                var _childAction2 = newStackAction.action || _NavigationActions.default.init({\n                  params: newStackAction.params\n                });\n\n                childState = router.getStateForAction(_childAction2);\n              }\n\n              return _objectSpread({\n                params: newStackAction.params\n              }, childState, {\n                routeName: newStackAction.routeName,\n                key: newStackAction.key || (0, _KeyGenerator.generateKey)()\n              });\n            }),\n            index: action.index\n          });\n        }\n\n        if (action.type === _NavigationActions.default.BACK || action.type === _NavigationActions.default.POP) {\n          var _key = action.key,\n              n = action.n,\n              immediate = action.immediate;\n          var backRouteIndex = state.index;\n\n          if (action.type === _NavigationActions.default.POP && n != null) {\n            backRouteIndex = Math.max(1, state.index - n + 1);\n          } else if (_key) {\n            var backRoute = state.routes.find(function (route) {\n              return route.key === _key;\n            });\n            backRouteIndex = state.routes.indexOf(backRoute);\n          }\n\n          if (backRouteIndex > 0) {\n            return _objectSpread({}, state, {\n              routes: state.routes.slice(0, backRouteIndex),\n              index: backRouteIndex - 1,\n              isTransitioning: immediate !== true\n            });\n          } else if (backRouteIndex === 0 && action.type === _NavigationActions.default.POP) {\n            return _objectSpread({}, state);\n          }\n        }\n\n        return state;\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        var routeName = route.routeName;\n        var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n        var subPath = pathsByRouteNames[routeName].toPath(route.params);\n        var path = subPath;\n        var params = route.params;\n\n        if (screen && screen.router) {\n          var stateRoute = route;\n          var child = screen.router.getPathAndParamsForState(stateRoute);\n          path = subPath ? subPath + \"/\" + child.path : child.path;\n          params = child.params ? _objectSpread({}, params, {}, child.params) : params;\n        }\n\n        return {\n          path: path,\n          params: params\n        };\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(pathToResolve, inputParams) {\n        if (!pathToResolve) {\n          return _NavigationActions.default.navigate({\n            routeName: initialRouteName\n          });\n        }\n\n        var _pathToResolve$split = pathToResolve.split('?'),\n            _pathToResolve$split2 = (0, _slicedToArray2.default)(_pathToResolve$split, 2),\n            pathNameToResolve = _pathToResolve$split2[0],\n            queryString = _pathToResolve$split2[1];\n\n        var matchedRouteName;\n        var pathMatch;\n        var pathMatchKeys;\n\n        for (var _iterator = paths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref3;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref3 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref3 = _i.value;\n          }\n\n          var _ref4 = _ref3;\n\n          var _ref2 = (0, _slicedToArray2.default)(_ref4, 2);\n\n          var _routeName = _ref2[0];\n          var _path = _ref2[1];\n          var _re = _path.re,\n              _keys = _path.keys;\n          pathMatch = _re.exec(pathNameToResolve);\n\n          if (pathMatch && pathMatch.length) {\n            pathMatchKeys = _keys;\n            matchedRouteName = _routeName;\n            break;\n          }\n        }\n\n        if (!matchedRouteName) {\n          if (!pathToResolve) {\n            return _NavigationActions.default.navigate({\n              routeName: initialRouteName\n            });\n          }\n\n          return null;\n        }\n\n        var nestedAction;\n        var nestedQueryString = queryString ? '?' + queryString : '';\n\n        if (childRouters[matchedRouteName]) {\n          nestedAction = childRouters[matchedRouteName].getActionForPathAndParams(pathMatch.slice(pathMatchKeys.length).join('/') + nestedQueryString);\n\n          if (!nestedAction) {\n            return null;\n          }\n        }\n\n        var queryParams = !isEmpty(inputParams) ? inputParams : (queryString || '').split('&').reduce(function (result, item) {\n          if (item !== '') {\n            var nextResult = result || {};\n\n            var _item$split = item.split('='),\n                _item$split2 = (0, _slicedToArray2.default)(_item$split, 2),\n                key = _item$split2[0],\n                value = _item$split2[1];\n\n            nextResult[key] = value;\n            return nextResult;\n          }\n\n          return result;\n        }, null);\n        var params = pathMatch.slice(1).reduce(function (result, matchResult, i) {\n          var key = pathMatchKeys[i];\n\n          if (key.asterisk || !key) {\n            return result;\n          }\n\n          var nextResult = result || {};\n          var paramName = key.name;\n          var decodedMatchResult;\n\n          try {\n            decodedMatchResult = decodeURIComponent(matchResult);\n          } catch (e) {}\n\n          nextResult[paramName] = decodedMatchResult || matchResult;\n          return nextResult;\n        }, queryParams);\n        return _NavigationActions.default.navigate(_objectSpread({\n          routeName: matchedRouteName\n        }, params ? {\n          params: params\n        } : {}, {}, nestedAction ? {\n          action: nestedAction\n        } : {}));\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, stackConfig.navigationOptions),\n      getScreenConfig: _getScreenConfigDeprecated.default\n    };\n  };\n\n  exports.default = _default;\n});","map":[[15,0,1,0],[17,0,3,0],[19,0,4,0],[21,0,5,0],[23,0,6,0],[25,0,7,0],[27,0,8,0],[29,0,9,0],[31,0,10,0],[37,0,12,0],[37,11,12,9,"isEmpty"],[37,18,12,0],[37,19,12,17,"obj"],[37,22,12,0],[37,24,12,22],[38,0,13,2],[38,8,13,6],[38,9,13,7,"obj"],[38,12,13,2],[38,14,13,12],[38,21,13,19],[38,25,13,12],[40,0,14,2],[40,9,14,7],[40,13,14,11,"key"],[40,16,14,2],[40,20,14,18,"obj"],[40,23,14,2],[40,25,14,23],[41,0,15,4],[41,13,15,11],[41,18,15,4],[42,0,16,3],[44,0,17,2],[44,11,17,9],[44,15,17,2],[45,0,18,1],[47,0,20,0],[47,11,20,9,"behavesLikePushAction"],[47,32,20,0],[47,33,20,31,"action"],[47,39,20,0],[47,41,20,39],[48,0,21,2],[48,11,22,4,"action"],[48,17,22,10],[48,18,22,11,"type"],[48,22,22,4],[48,27,22,20,"NavigationActions"],[48,54,22,38,"NAVIGATE"],[48,62,22,4],[48,66,23,4,"action"],[48,72,23,10],[48,73,23,11,"type"],[48,77,23,4],[48,82,23,20,"NavigationActions"],[48,109,23,38,"PUSH"],[48,113,21,2],[49,0,25,1],[51,17,27,15],[51,35,27,16,"routeConfigs"],[51,47,27,15],[51,49,27,51],[52,0,27,51],[52,8,27,30,"stackConfig"],[52,19,27,51],[52,90,27,44],[52,92,27,51],[53,0,29,2],[53,41,29,25,"routeConfigs"],[53,53,29,2],[54,0,31,2],[54,8,31,8,"childRouters"],[54,20,31,20],[54,23,31,23],[54,25,31,2],[55,0,32,2],[55,8,32,8,"routeNames"],[55,18,32,18],[55,21,32,21,"Object"],[55,27,32,27],[55,28,32,28,"keys"],[55,32,32,21],[55,33,32,33,"routeConfigs"],[55,45,32,21],[55,46,32,2],[56,0,35,2,"routeNames"],[56,4,35,2,"routeNames"],[56,14,35,12],[56,15,35,13,"forEach"],[56,22,35,2],[56,23,35,21],[56,33,35,21,"routeName"],[56,42,35,30],[56,44,35,34],[57,0,36,4],[57,10,36,10,"screen"],[57,16,36,16],[57,19,36,19],[57,55,36,41,"routeConfigs"],[57,67,36,19],[57,69,36,55,"routeName"],[57,78,36,19],[57,79,36,4],[59,0,37,4],[59,10,37,8,"screen"],[59,16,37,14],[59,20,37,18,"screen"],[59,26,37,24],[59,27,37,25,"router"],[59,33,37,4],[59,35,37,33],[60,0,39,6,"childRouters"],[60,8,39,6,"childRouters"],[60,20,39,18],[60,21,39,19,"routeName"],[60,30,39,18],[60,31,39,6],[60,34,39,32,"screen"],[60,40,39,38],[60,41,39,39,"router"],[60,47,39,6],[61,0,40,5],[61,7,37,4],[61,13,40,11],[62,0,42,6,"childRouters"],[62,8,42,6,"childRouters"],[62,20,42,18],[62,21,42,19,"routeName"],[62,30,42,18],[62,31,42,6],[62,34,42,32],[62,38,42,6],[63,0,43,5],[64,0,44,3],[64,5,35,2],[65,0,27,51],[65,8,46,10,"initialRouteParams"],[65,26,27,51],[65,29,46,33,"stackConfig"],[65,40,27,51],[65,41,46,10,"initialRouteParams"],[65,59,27,51],[66,0,48,2],[66,8,48,8,"initialRouteName"],[66,24,48,24],[66,27,48,27,"stackConfig"],[66,38,48,38],[66,39,48,39,"initialRouteName"],[66,55,48,27],[66,59,48,59,"routeNames"],[66,69,48,69],[66,70,48,70],[66,71,48,69],[66,72,48,2],[67,0,50,2],[67,8,50,8,"initialChildRouter"],[67,26,50,26],[67,29,50,29,"childRouters"],[67,41,50,41],[67,42,50,42,"initialRouteName"],[67,58,50,41],[67,59,50,2],[68,0,51,2],[68,8,51,8,"pathsByRouteNames"],[68,25,51,25],[68,28,51,28],[68,46,51,33,"stackConfig"],[68,57,51,44],[68,58,51,45,"paths"],[68,63,51,28],[68,68,51,56],[68,70,51,2],[69,0,52,2],[69,8,52,6,"paths"],[69,13,52,11],[69,16,52,14],[69,18,52,2],[71,0,54,2],[71,13,54,11,"getInitialState"],[71,28,54,2],[71,29,54,27,"action"],[71,35,54,2],[71,37,54,35],[72,0,55,4],[72,10,55,8,"route"],[72,15,55,13],[72,18,55,16],[72,20,55,4],[73,0,56,4],[73,10,56,10,"childRouter"],[73,21,56,21],[73,24,56,24,"childRouters"],[73,36,56,36],[73,37,56,37,"action"],[73,43,56,43],[73,44,56,44,"routeName"],[73,53,56,36],[73,54,56,4],[75,0,59,4],[75,10,59,8,"behavesLikePushAction"],[75,31,59,29],[75,32,59,30,"action"],[75,38,59,29],[75,39,59,8],[75,43,59,41,"childRouter"],[75,54,59,52],[75,59,59,57,"undefined"],[75,68,59,4],[75,70,59,68],[76,0,60,6],[76,12,60,10,"childState"],[76,22,60,20],[76,25,60,23],[76,27,60,6],[78,0,62,6],[78,12,62,10,"childRouter"],[78,23,62,21],[78,28,62,26],[78,32,62,6],[78,34,62,32],[79,0,63,8],[79,14,63,14,"childAction"],[79,25,63,25],[79,28,64,10,"action"],[79,34,64,16],[79,35,64,17,"action"],[79,41,64,10],[79,45,64,27,"NavigationActions"],[79,72,64,45,"init"],[79,76,64,27],[79,77,64,50],[80,0,64,52,"params"],[80,12,64,52,"params"],[80,18,64,58],[80,20,64,60,"action"],[80,26,64,66],[80,27,64,67,"params"],[81,0,64,50],[81,11,64,27],[81,12,63,8],[83,0,65,8,"childState"],[83,10,65,8,"childState"],[83,20,65,18],[83,23,65,21,"childRouter"],[83,34,65,32],[83,35,65,33,"getStateForAction"],[83,52,65,21],[83,53,65,51,"childAction"],[83,64,65,21],[83,65,65,8],[84,0,66,7],[86,0,67,6],[86,15,67,13],[87,0,68,8,"key"],[87,10,68,8,"key"],[87,13,68,11],[87,15,68,13],[87,32,67,13],[88,0,69,8,"isTransitioning"],[88,10,69,8,"isTransitioning"],[88,25,69,23],[88,27,69,25],[88,32,67,13],[89,0,70,8,"index"],[89,10,70,8,"index"],[89,15,70,13],[89,17,70,15],[89,18,67,13],[90,0,71,8,"routes"],[90,10,71,8,"routes"],[90,16,71,14],[90,18,71,16],[91,0,73,12,"params"],[91,12,73,12,"params"],[91,18,73,18],[91,20,73,20,"action"],[91,26,73,26],[91,27,73,27,"params"],[92,0,71,16],[92,13,74,15,"childState"],[92,23,71,16],[93,0,75,12,"key"],[93,12,75,12,"key"],[93,15,75,15],[93,17,75,17,"action"],[93,23,75,23],[93,24,75,24,"key"],[93,27,75,17],[93,31,75,31],[93,63,71,16],[94,0,76,12,"routeName"],[94,12,76,12,"routeName"],[94,21,76,21],[94,23,76,23,"action"],[94,29,76,29],[94,30,76,30,"routeName"],[95,0,71,16],[96,0,67,13],[96,9,67,6],[97,0,80,5],[99,0,82,4],[99,10,82,8,"initialChildRouter"],[99,28,82,4],[99,30,82,28],[100,0,83,6,"route"],[100,8,83,6,"route"],[100,13,83,11],[100,16,83,14,"initialChildRouter"],[100,34,83,32],[100,35,83,33,"getStateForAction"],[100,52,83,14],[100,53,84,8,"NavigationActions"],[100,80,84,26,"navigate"],[100,88,84,8],[100,89,84,35],[101,0,85,10,"routeName"],[101,10,85,10,"routeName"],[101,19,85,19],[101,21,85,21,"initialRouteName"],[101,37,84,35],[102,0,86,10,"params"],[102,10,86,10,"params"],[102,16,86,16],[102,18,86,18,"initialRouteParams"],[103,0,84,35],[103,9,84,8],[103,10,83,14],[103,11,83,6],[104,0,89,5],[106,0,90,4],[106,10,90,10,"params"],[106,16,90,16],[106,19,90,19],[106,20,90,20,"route"],[106,25,90,25],[106,26,90,26,"params"],[106,32,90,20],[106,36,90,36,"action"],[106,42,90,42],[106,43,90,43,"params"],[106,49,90,20],[106,53,90,53,"initialRouteParams"],[106,71,90,19],[106,94,91,10,"route"],[106,99,91,15],[106,100,91,16,"params"],[106,106,91,10],[106,110,91,26],[106,112,90,19],[106,118,92,10,"action"],[106,124,92,16],[106,125,92,17,"params"],[106,131,92,10],[106,135,92,27],[106,137,90,19],[106,143,93,10,"initialRouteParams"],[106,161,93,28],[106,165,93,32],[106,167,90,19],[106,168,90,4],[108,0,54,35],[108,10,95,12,"initialRouteKey"],[108,25,54,35],[108,28,95,32,"stackConfig"],[108,39,54,35],[108,40,95,12,"initialRouteKey"],[108,55,54,35],[109,0,96,4,"route"],[109,6,96,4,"route"],[109,11,96,9],[109,32,97,9,"route"],[109,37,96,9],[109,43,98,10,"params"],[109,49,98,16],[109,52,98,19],[110,0,98,21,"params"],[110,8,98,21,"params"],[110,14,98,27],[110,16,98,21,"params"],[111,0,98,19],[111,7,98,16],[111,10,98,32],[111,12,96,9],[112,0,99,6,"routeName"],[112,8,99,6,"routeName"],[112,17,99,15],[112,19,99,17,"initialRouteName"],[112,35,96,9],[113,0,100,6,"key"],[113,8,100,6,"key"],[113,11,100,9],[113,13,100,11,"action"],[113,19,100,17],[113,20,100,18,"key"],[113,23,100,11],[113,27,100,26,"initialRouteKey"],[113,42,100,41],[113,46,100,45],[114,0,96,9],[114,8,96,4],[115,0,102,4],[115,13,102,11],[116,0,103,6,"key"],[116,8,103,6,"key"],[116,11,103,9],[116,13,103,11],[116,30,102,11],[117,0,104,6,"isTransitioning"],[117,8,104,6,"isTransitioning"],[117,23,104,21],[117,25,104,23],[117,30,102,11],[118,0,105,6,"index"],[118,8,105,6,"index"],[118,13,105,11],[118,15,105,13],[118,16,102,11],[119,0,106,6,"routes"],[119,8,106,6,"routes"],[119,14,106,12],[119,16,106,14],[119,17,106,15,"route"],[119,22,106,14],[120,0,102,11],[120,7,102,4],[121,0,108,3],[123,0,111,2,"routeNames"],[123,4,111,2,"routeNames"],[123,14,111,12],[123,15,111,13,"forEach"],[123,22,111,2],[123,23,111,21],[123,33,111,21,"routeName"],[123,42,111,30],[123,44,111,34],[124,0,112,4],[124,10,112,8,"pathPattern"],[124,21,112,19],[124,24,113,6,"pathsByRouteNames"],[124,41,113,23],[124,42,113,24,"routeName"],[124,51,113,23],[124,52,113,6],[124,56,113,38,"routeConfigs"],[124,68,113,50],[124,69,113,51,"routeName"],[124,78,113,50],[124,79,113,38],[124,80,113,62,"path"],[124,84,112,4],[125,0,114,4],[125,10,114,8,"matchExact"],[125,20,114,18],[125,23,114,21],[125,24,114,22],[125,25,114,23,"pathPattern"],[125,36,114,21],[125,40,114,38],[125,41,114,39,"childRouters"],[125,53,114,51],[125,54,114,52,"routeName"],[125,63,114,51],[125,64,114,4],[127,0,115,4],[127,10,115,8,"pathPattern"],[127,21,115,19],[127,26,115,24,"undefined"],[127,35,115,4],[127,37,115,35],[128,0,116,6,"pathPattern"],[128,8,116,6,"pathPattern"],[128,19,116,17],[128,22,116,20,"routeName"],[128,31,116,6],[129,0,117,5],[131,0,118,4],[131,10,118,10,"keys"],[131,14,118,14],[131,17,118,17],[131,19,118,4],[132,0,119,4],[132,10,119,8,"re"],[132,12,119,4],[132,14,119,12,"toPath"],[132,20,119,4],[132,22,119,20,"priority"],[132,30,119,4],[134,0,120,4],[134,10,120,8],[134,17,120,15,"pathPattern"],[134,28,120,8],[134,33,120,31],[134,41,120,4],[134,43,120,41],[135,0,122,6,"re"],[135,8,122,6,"re"],[135,10,122,8],[135,13,122,11],[135,40,122,24,"pathPattern"],[135,51,122,11],[135,53,122,37,"keys"],[135,57,122,11],[135,58,122,6],[136,0,123,6,"toPath"],[136,8,123,6,"toPath"],[136,14,123,12],[136,17,123,15,"pathToRegexp"],[136,39,123,28,"compile"],[136,46,123,15],[136,47,123,36,"pathPattern"],[136,58,123,15],[136,59,123,6],[137,0,124,6,"priority"],[137,8,124,6,"priority"],[137,16,124,14],[137,19,124,17],[137,20,124,6],[138,0,125,5],[138,7,120,4],[138,13,125,11],[139,0,127,6,"re"],[139,8,127,6,"re"],[139,10,127,8],[139,13,127,11],[139,40,127,24],[139,43,127,11],[139,45,127,29,"keys"],[139,49,127,11],[139,50,127,6],[141,0,128,6,"toPath"],[141,8,128,6,"toPath"],[141,14,128,12],[141,17,128,15],[142,0,128,15],[142,17,128,21],[142,19,128,15],[143,0,128,15],[143,9,128,6],[145,0,129,6,"matchExact"],[145,8,129,6,"matchExact"],[145,18,129,16],[145,21,129,19],[145,25,129,6],[146,0,130,6,"priority"],[146,8,130,6,"priority"],[146,16,130,14],[146,19,130,17],[146,20,130,18],[146,21,130,6],[147,0,131,5],[149,0,132,4],[149,10,132,8],[149,11,132,9,"matchExact"],[149,21,132,4],[149,23,132,21],[150,0,133,6],[150,12,133,12,"wildcardRe"],[150,22,133,22],[150,25,133,25],[150,52,133,41,"pathPattern"],[150,63,133,25],[150,72,133,58,"keys"],[150,76,133,25],[150,77,133,6],[151,0,134,6,"re"],[151,8,134,6,"re"],[151,10,134,8],[151,13,134,11],[151,17,134,15,"RegExp"],[151,23,134,11],[151,32,134,28,"re"],[151,34,134,30],[151,35,134,31,"source"],[151,41,134,11],[151,54,134,45,"wildcardRe"],[151,64,134,55],[151,65,134,56,"source"],[151,71,134,11],[151,78,134,6],[152,0,135,5],[154,0,136,4,"pathsByRouteNames"],[154,6,136,4,"pathsByRouteNames"],[154,23,136,21],[154,24,136,22,"routeName"],[154,33,136,21],[154,34,136,4],[154,37,136,35],[155,0,136,37,"re"],[155,8,136,37,"re"],[155,10,136,39],[155,12,136,37,"re"],[155,14,136,35],[156,0,136,41,"keys"],[156,8,136,41,"keys"],[156,12,136,45],[156,14,136,41,"keys"],[156,18,136,35],[157,0,136,47,"toPath"],[157,8,136,47,"toPath"],[157,14,136,53],[157,16,136,47,"toPath"],[157,22,136,35],[158,0,136,55,"priority"],[158,8,136,55,"priority"],[158,16,136,63],[158,18,136,55,"priority"],[159,0,136,35],[159,7,136,4],[160,0,137,3],[160,5,111,2],[161,0,139,2,"paths"],[161,4,139,2,"paths"],[161,9,139,7],[161,12,139,10,"Object"],[161,18,139,16],[161,19,139,17,"entries"],[161,26,139,10],[161,27,139,25,"pathsByRouteNames"],[161,44,139,10],[161,45,139,2],[162,0,140,2,"paths"],[162,4,140,2,"paths"],[162,9,140,7],[162,10,140,8,"sort"],[162,14,140,2],[162,15,140,13],[162,25,140,14,"a"],[162,26,140,13],[162,28,140,30,"b"],[162,29,140,13],[163,0,140,13],[163,13,140,49,"b"],[163,14,140,50],[163,15,140,51],[163,16,140,50],[163,17,140,49],[163,18,140,54,"priority"],[163,26,140,49],[163,29,140,65,"a"],[163,30,140,66],[163,31,140,67],[163,32,140,66],[163,33,140,65],[163,34,140,70,"priority"],[163,42,140,13],[164,0,140,13],[164,5,140,2],[165,0,142,2],[165,11,142,9],[166,0,143,4,"getComponentForState"],[166,6,143,4,"getComponentForState"],[166,26,142,9],[166,58,143,25,"state"],[166,63,142,9],[166,65,143,32],[167,0,144,6],[167,12,144,12,"activeChildRoute"],[167,28,144,28],[167,31,144,31,"state"],[167,36,144,36],[167,37,144,37,"routes"],[167,43,144,31],[167,44,144,44,"state"],[167,49,144,49],[167,50,144,50,"index"],[167,55,144,31],[167,56,144,6],[168,0,143,32],[168,12,145,14,"routeName"],[168,21,143,32],[168,24,145,28,"activeChildRoute"],[168,40,143,32],[168,41,145,14,"routeName"],[168,50,143,32],[170,0,146,6],[170,12,146,10,"childRouters"],[170,24,146,22],[170,25,146,23,"routeName"],[170,34,146,22],[170,35,146,6],[170,37,146,35],[171,0,147,8],[171,17,147,15,"childRouters"],[171,29,147,27],[171,30,147,28,"routeName"],[171,39,147,27],[171,40,147,15],[171,41,147,39,"getComponentForState"],[171,61,147,15],[171,62,147,60,"activeChildRoute"],[171,78,147,15],[171,79,147,8],[172,0,148,7],[174,0,149,6],[174,15,149,13],[174,51,149,35,"routeConfigs"],[174,63,149,13],[174,65,149,49,"routeName"],[174,74,149,13],[174,75,149,6],[175,0,150,5],[175,7,142,9],[176,0,152,4,"getComponentForRouteName"],[176,6,152,4,"getComponentForRouteName"],[176,30,142,9],[176,66,152,29,"routeName"],[176,75,142,9],[176,77,152,40],[177,0,153,6],[177,15,153,13],[177,51,153,35,"routeConfigs"],[177,63,153,13],[177,65,153,49,"routeName"],[177,74,153,13],[177,75,153,6],[178,0,154,5],[178,7,142,9],[179,0,156,4,"getStateForAction"],[179,6,156,4,"getStateForAction"],[179,23,142,9],[179,52,156,22,"action"],[179,58,142,9],[179,60,156,30,"state"],[179,65,142,9],[179,67,156,37],[180,0,158,6],[180,12,158,10],[180,13,158,11,"state"],[180,18,158,6],[180,20,158,18],[181,0,159,8],[181,17,159,15,"getInitialState"],[181,32,159,30],[181,33,159,31,"action"],[181,39,159,30],[181,40,159,8],[182,0,160,7],[184,0,164,6],[184,12,164,10,"action"],[184,18,164,16],[184,19,164,17,"type"],[184,23,164,10],[184,28,164,26,"NavigationActions"],[184,55,164,44,"RESET"],[184,60,164,10],[184,64,164,53,"action"],[184,70,164,59],[184,71,164,60,"key"],[184,74,164,53],[184,79,164,68],[184,83,164,6],[184,85,164,74],[185,0,165,8],[185,14,165,14,"keyIndex"],[185,22,165,22],[185,25,165,25,"action"],[185,31,165,31],[185,32,165,32,"key"],[185,35,165,25],[185,38,166,12,"StateUtils"],[185,58,166,23,"indexOf"],[185,65,166,12],[185,66,166,31,"state"],[185,71,166,12],[185,73,166,38,"action"],[185,79,166,44],[185,80,166,45,"key"],[185,83,166,12],[185,84,165,25],[185,87,167,12],[185,88,167,13],[185,89,165,8],[186,0,168,8],[186,14,168,14,"childIndex"],[186,24,168,24],[186,27,168,27,"keyIndex"],[186,35,168,35],[186,39,168,39],[186,40,168,27],[186,43,168,43,"keyIndex"],[186,51,168,27],[186,54,168,54,"state"],[186,59,168,59],[186,60,168,60,"index"],[186,65,168,8],[187,0,169,8],[187,14,169,14,"childRoute"],[187,24,169,24],[187,27,169,27,"state"],[187,32,169,32],[187,33,169,33,"routes"],[187,39,169,27],[187,40,169,40,"childIndex"],[187,50,169,27],[187,51,169,8],[188,0,170,8],[188,34,171,10,"childRoute"],[188,44,170,8],[188,88,172,50,"childIndex"],[188,98,170,8],[189,0,174,8],[189,14,174,14,"childRouter"],[189,25,174,25],[189,28,174,28,"childRouters"],[189,40,174,40],[189,41,174,41,"childRoute"],[189,51,174,51],[189,52,174,52,"routeName"],[189,61,174,40],[189,62,174,8],[191,0,175,8],[191,14,175,12,"childRouter"],[191,25,175,8],[191,27,175,25],[192,0,176,10],[192,16,176,16,"route"],[192,21,176,21],[192,24,176,24,"childRouter"],[192,35,176,35],[192,36,176,36,"getStateForAction"],[192,53,176,24],[192,54,176,54,"action"],[192,60,176,24],[192,62,176,62,"childRoute"],[192,72,176,24],[192,73,176,10],[194,0,177,10],[194,16,177,14,"route"],[194,21,177,19],[194,26,177,24],[194,30,177,10],[194,32,177,30],[195,0,178,12],[195,21,178,19,"state"],[195,26,178,12],[196,0,179,11],[198,0,180,10],[198,16,180,14,"route"],[198,21,180,19],[198,25,180,23,"route"],[198,30,180,28],[198,35,180,33,"childRoute"],[198,45,180,10],[198,47,180,45],[199,0,181,12],[199,21,181,19,"StateUtils"],[199,41,181,30,"replaceAt"],[199,50,181,19],[199,51,181,40,"state"],[199,56,181,19],[199,58,181,47,"childRoute"],[199,68,181,57],[199,69,181,58,"key"],[199,72,181,19],[199,74,181,63,"route"],[199,79,181,19],[199,80,181,12],[200,0,182,11],[201,0,183,9],[202,0,184,7],[204,0,188,6],[204,12,189,8,"behavesLikePushAction"],[204,33,189,29],[204,34,189,30,"action"],[204,40,189,29],[204,41,189,8],[204,45,190,8,"childRouters"],[204,57,190,20],[204,58,190,21,"action"],[204,64,190,27],[204,65,190,28,"routeName"],[204,74,190,20],[204,75,190,8],[204,80,190,43,"undefined"],[204,89,188,6],[204,91,191,8],[205,0,192,8],[205,14,192,14,"childRouter"],[205,26,192,25],[205,29,192,28,"childRouters"],[205,41,192,40],[205,42,192,41,"action"],[205,48,192,47],[205,49,192,48,"routeName"],[205,58,192,40],[205,59,192,8],[207,0,193,8],[207,14,193,12,"route"],[207,20,193,8],[209,0,195,8],[209,34,196,10,"action"],[209,40,196,16],[209,41,196,17,"type"],[209,45,196,10],[209,50,196,26,"NavigationActions"],[209,77,196,44,"PUSH"],[209,81,196,10],[209,85,196,52,"action"],[209,91,196,58],[209,92,196,59,"key"],[209,95,196,52],[209,99,196,66],[209,103,195,8],[209,105,197,10],[209,158,195,8],[211,0,201,8],[211,14,201,12,"action"],[211,20,201,18],[211,21,201,19,"key"],[211,24,201,8],[211,26,201,24],[212,0,202,10],[212,16,202,16,"lastRouteIndex"],[212,30,202,30],[212,33,202,33,"state"],[212,38,202,38],[212,39,202,39,"routes"],[212,45,202,33],[212,46,202,46,"findIndex"],[212,55,202,33],[212,56,203,12],[212,66,203,12,"r"],[212,67,203,13],[213,0,203,13],[213,21,203,17,"r"],[213,22,203,18],[213,23,203,19,"key"],[213,26,203,17],[213,31,203,27,"action"],[213,37,203,33],[213,38,203,34,"key"],[213,41,203,13],[214,0,203,13],[214,13,202,33],[214,14,202,10],[216,0,205,10],[216,16,205,14,"lastRouteIndex"],[216,30,205,28],[216,35,205,33],[216,36,205,34],[216,37,205,10],[216,39,205,37],[217,0,207,12],[217,18,207,16,"state"],[217,23,207,21],[217,24,207,22,"index"],[217,29,207,16],[217,34,207,32,"lastRouteIndex"],[217,48,207,16],[217,52,207,50],[217,53,207,51,"action"],[217,59,207,57],[217,60,207,58,"params"],[217,66,207,12],[217,68,207,66],[218,0,208,14],[218,23,208,21,"state"],[218,28,208,14],[219,0,209,13],[221,0,212,12],[221,18,212,18,"routes"],[221,24,212,24],[221,27,212,27,"state"],[221,32,212,32],[221,33,212,33,"routes"],[221,39,212,27],[221,40,212,40,"slice"],[221,45,212,27],[221,46,212,46],[221,47,212,27],[221,49,212,49,"lastRouteIndex"],[221,63,212,63],[221,66,212,66],[221,67,212,27],[221,68,212,12],[223,0,215,12],[223,18,215,16,"action"],[223,24,215,22],[223,25,215,23,"params"],[223,31,215,12],[223,33,215,31],[224,0,216,14],[224,20,216,20,"route"],[224,27,216,25],[224,30,216,28,"state"],[224,35,216,33],[224,36,216,34,"routes"],[224,42,216,28],[224,43,216,41,"find"],[224,47,216,28],[224,48,216,46],[224,58,216,46,"r"],[224,59,216,47],[225,0,216,47],[225,25,216,51,"r"],[225,26,216,52],[225,27,216,53,"key"],[225,30,216,51],[225,35,216,61,"action"],[225,41,216,67],[225,42,216,68,"key"],[225,45,216,47],[226,0,216,47],[226,17,216,28],[226,18,216,14],[228,0,217,14,"routes"],[228,16,217,14,"routes"],[228,22,217,20],[228,23,217,21,"lastRouteIndex"],[228,37,217,20],[228,38,217,14],[228,59,218,19,"route"],[228,66,217,14],[229,0,219,16,"params"],[229,18,219,16,"params"],[229,24,219,22],[229,44,220,21,"route"],[229,51,220,26],[229,52,220,27,"params"],[229,58,219,22],[229,64,221,21,"action"],[229,70,221,27],[229,71,221,28,"params"],[229,77,219,22],[230,0,217,14],[231,0,224,13],[233,0,226,12],[233,39,227,17,"state"],[233,44,226,12],[234,0,228,14,"isTransitioning"],[234,16,228,14,"isTransitioning"],[234,31,228,29],[234,33,229,16,"state"],[234,38,229,21],[234,39,229,22,"index"],[234,44,229,16],[234,49,229,32,"lastRouteIndex"],[234,63,229,16],[234,66,230,20,"action"],[234,72,230,26],[234,73,230,27,"immediate"],[234,82,230,20],[234,87,230,41],[234,91,229,16],[234,94,231,20,"undefined"],[234,103,226,12],[235,0,232,14,"index"],[235,16,232,14,"index"],[235,21,232,19],[235,23,232,21,"lastRouteIndex"],[235,37,226,12],[236,0,233,14,"routes"],[236,16,233,14,"routes"],[236,22,233,20],[236,24,233,14,"routes"],[237,0,226,12],[238,0,235,11],[239,0,236,9],[241,0,238,8],[241,14,238,12,"childRouter"],[241,26,238,8],[241,28,238,25],[242,0,239,10],[242,16,239,16,"childAction"],[242,27,239,27],[242,30,240,12,"action"],[242,36,240,18],[242,37,240,19,"action"],[242,43,240,12],[242,47,240,29,"NavigationActions"],[242,74,240,47,"init"],[242,78,240,29],[242,79,240,52],[243,0,240,54,"params"],[243,14,240,54,"params"],[243,20,240,60],[243,22,240,62,"action"],[243,28,240,68],[243,29,240,69,"params"],[244,0,240,52],[244,13,240,29],[244,14,239,10],[246,0,241,10,"route"],[246,12,241,10,"route"],[246,18,241,15],[247,0,242,12,"params"],[247,14,242,12,"params"],[247,20,242,18],[247,22,242,20,"action"],[247,28,242,26],[247,29,242,27,"params"],[248,0,241,15],[248,15,244,15,"childRouter"],[248,27,244,26],[248,28,244,27,"getStateForAction"],[248,45,244,15],[248,46,244,45,"childAction"],[248,57,244,15],[248,58,241,15],[249,0,245,12,"routeName"],[249,14,245,12,"routeName"],[249,23,245,21],[249,25,245,23,"action"],[249,31,245,29],[249,32,245,30,"routeName"],[249,41,241,15],[250,0,246,12,"key"],[250,14,246,12,"key"],[250,17,246,15],[250,19,246,17,"action"],[250,25,246,23],[250,26,246,24,"key"],[250,29,246,17],[250,33,246,31],[251,0,241,15],[251,14,241,10],[252,0,248,9],[252,11,238,8],[252,17,248,15],[253,0,249,10,"route"],[253,12,249,10,"route"],[253,18,249,15],[253,21,249,18],[254,0,250,12,"params"],[254,14,250,12,"params"],[254,20,250,18],[254,22,250,20,"action"],[254,28,250,26],[254,29,250,27,"params"],[254,35,249,18],[255,0,251,12,"routeName"],[255,14,251,12,"routeName"],[255,23,251,21],[255,25,251,23,"action"],[255,31,251,29],[255,32,251,30,"routeName"],[255,41,249,18],[256,0,252,12,"key"],[256,14,252,12,"key"],[256,17,252,15],[256,19,252,17,"action"],[256,25,252,23],[256,26,252,24,"key"],[256,29,252,17],[256,33,252,31],[257,0,249,18],[257,13,249,10],[258,0,254,9],[260,0,255,8],[260,35,256,13,"StateUtils"],[260,55,256,24,"push"],[260,59,256,13],[260,60,256,29,"state"],[260,65,256,13],[260,67,256,36,"route"],[260,73,256,13],[260,74,255,8],[261,0,257,10,"isTransitioning"],[261,12,257,10,"isTransitioning"],[261,27,257,25],[261,29,257,27,"action"],[261,35,257,33],[261,36,257,34,"immediate"],[261,45,257,27],[261,50,257,48],[262,0,255,8],[263,0,259,7],[263,9,188,6],[263,15,259,13],[263,19,260,8,"action"],[263,25,260,14],[263,26,260,15,"type"],[263,30,260,8],[263,35,260,24,"NavigationActions"],[263,62,260,42,"PUSH"],[263,66,260,8],[263,70,261,8,"childRouters"],[263,82,261,20],[263,83,261,21,"action"],[263,89,261,27],[263,90,261,28,"routeName"],[263,99,261,20],[263,100,261,8],[263,105,261,43,"undefined"],[263,114,259,13],[263,116,262,8],[264,0,266,8],[264,35,267,13,"state"],[264,40,266,8],[265,0,269,7],[267,0,272,6],[267,12,272,10,"behavesLikePushAction"],[267,33,272,31],[267,34,272,32,"action"],[267,40,272,31],[267,41,272,6],[267,43,272,41],[268,0,273,8],[268,14,273,14,"childRouterNames"],[268,30,273,30],[268,33,273,33,"Object"],[268,39,273,39],[268,40,273,40,"keys"],[268,44,273,33],[268,45,273,45,"childRouters"],[268,57,273,33],[268,58,273,8],[270,0,274,8],[270,15,274,13],[270,19,274,17,"i"],[270,20,274,18],[270,23,274,21],[270,24,274,8],[270,26,274,24,"i"],[270,27,274,25],[270,30,274,28,"childRouterNames"],[270,46,274,44],[270,47,274,45,"length"],[270,53,274,8],[270,55,274,53,"i"],[270,56,274,54],[270,58,274,8],[270,60,274,58],[271,0,275,10],[271,16,275,16,"childRouterName"],[271,31,275,31],[271,34,275,34,"childRouterNames"],[271,50,275,50],[271,51,275,51,"i"],[271,52,275,50],[271,53,275,10],[272,0,276,10],[272,16,276,16,"childRouter"],[272,29,276,27],[272,32,276,30,"childRouters"],[272,44,276,42],[272,45,276,43,"childRouterName"],[272,60,276,42],[272,61,276,10],[274,0,277,10],[274,16,277,14,"childRouter"],[274,29,277,10],[274,31,277,27],[275,0,279,12],[275,18,279,18,"initChildRoute"],[275,32,279,32],[275,35,279,35,"childRouter"],[275,48,279,46],[275,49,279,47,"getStateForAction"],[275,66,279,35],[275,67,280,14,"NavigationActions"],[275,94,280,32,"init"],[275,98,280,14],[275,100,279,35],[275,101,279,12],[277,0,283,12],[277,18,283,18,"navigatedChildRoute"],[277,37,283,37],[277,40,283,40,"childRouter"],[277,53,283,51],[277,54,283,52,"getStateForAction"],[277,71,283,40],[277,72,284,14,"action"],[277,78,283,40],[277,80,285,14,"initChildRoute"],[277,94,283,40],[277,95,283,12],[279,0,287,12],[279,18,287,16,"routeToPush"],[279,29,287,27],[279,32,287,30],[279,36,287,12],[281,0,288,12],[281,18,288,16,"navigatedChildRoute"],[281,37,288,35],[281,42,288,40],[281,46,288,12],[281,48,288,46],[282,0,290,14,"routeToPush"],[282,16,290,14,"routeToPush"],[282,27,290,25],[282,30,290,28,"initChildRoute"],[282,44,290,14],[283,0,291,13],[283,15,288,12],[283,21,291,19],[283,25,291,23,"navigatedChildRoute"],[283,44,291,42],[283,49,291,47,"initChildRoute"],[283,63,291,19],[283,65,291,63],[284,0,293,14,"routeToPush"],[284,16,293,14,"routeToPush"],[284,27,293,25],[284,30,293,28,"navigatedChildRoute"],[284,49,293,14],[285,0,294,13],[287,0,295,12],[287,18,295,16,"routeToPush"],[287,29,295,12],[287,31,295,29],[288,0,296,14],[288,20,296,20,"route"],[288,27,296,25],[288,48,297,19,"routeToPush"],[288,59,296,25],[289,0,298,16,"routeName"],[289,18,298,16,"routeName"],[289,27,298,25],[289,29,298,27,"childRouterName"],[289,44,296,25],[290,0,299,16,"key"],[290,18,299,16,"key"],[290,21,299,19],[290,23,299,21,"action"],[290,29,299,27],[290,30,299,28,"key"],[290,33,299,21],[290,37,299,35],[291,0,296,25],[291,18,296,14],[293,0,301,14],[293,23,301,21,"StateUtils"],[293,43,301,32,"push"],[293,47,301,21],[293,48,301,37,"state"],[293,53,301,21],[293,55,301,44,"route"],[293,62,301,21],[293,63,301,14],[294,0,302,13],[295,0,303,11],[296,0,304,9],[297,0,305,7],[299,0,308,6],[299,12,308,10,"action"],[299,18,308,16],[299,19,308,17,"type"],[299,23,308,10],[299,28,308,26,"NavigationActions"],[299,55,308,44,"POP_TO_TOP"],[299,65,308,6],[299,67,308,56],[300,0,311,8],[300,14,311,12,"action"],[300,20,311,18],[300,21,311,19,"key"],[300,24,311,12],[300,28,311,26,"state"],[300,33,311,31],[300,34,311,32,"key"],[300,37,311,26],[300,42,311,40,"action"],[300,48,311,46],[300,49,311,47,"key"],[300,52,311,8],[300,54,311,52],[301,0,312,10],[301,19,312,17,"state"],[301,24,312,10],[302,0,313,9],[304,0,317,8],[304,14,317,12,"state"],[304,19,317,17],[304,20,317,18,"index"],[304,25,317,12],[304,30,317,28],[304,31,317,8],[304,33,317,31],[305,0,318,10],[305,37,319,15,"state"],[305,42,318,10],[306,0,321,9],[306,11,317,8],[306,17,321,15],[307,0,322,10],[307,37,323,15,"state"],[307,42,322,10],[308,0,324,12,"isTransitioning"],[308,14,324,12,"isTransitioning"],[308,29,324,27],[308,31,324,29,"action"],[308,37,324,35],[308,38,324,36,"immediate"],[308,47,324,29],[308,52,324,50],[308,56,322,10],[309,0,325,12,"index"],[309,14,325,12,"index"],[309,19,325,17],[309,21,325,19],[309,22,322,10],[310,0,326,12,"routes"],[310,14,326,12,"routes"],[310,20,326,18],[310,22,326,20],[310,23,326,21,"state"],[310,28,326,26],[310,29,326,27,"routes"],[310,35,326,21],[310,36,326,34],[310,37,326,21],[310,38,326,20],[311,0,322,10],[312,0,328,9],[314,0,329,8],[314,17,329,15,"state"],[314,22,329,8],[315,0,330,7],[317,0,333,6],[317,12,333,10,"action"],[317,18,333,16],[317,19,333,17,"type"],[317,23,333,10],[317,28,333,26,"NavigationActions"],[317,55,333,44,"REPLACE"],[317,62,333,6],[317,64,333,53],[318,0,334,8],[318,14,334,14,"routeIndex"],[318,24,334,24],[318,27,334,27,"state"],[318,32,334,32],[318,33,334,33,"routes"],[318,39,334,27],[318,40,334,40,"findIndex"],[318,49,334,27],[318,50,334,50],[318,60,334,50,"r"],[318,61,334,51],[319,0,334,51],[319,19,334,55,"r"],[319,20,334,56],[319,21,334,57,"key"],[319,24,334,55],[319,29,334,65,"action"],[319,35,334,71],[319,36,334,72,"key"],[319,39,334,51],[320,0,334,51],[320,11,334,27],[320,12,334,8],[322,0,336,8],[322,14,336,12,"routeIndex"],[322,24,336,22],[322,29,336,27],[322,30,336,28],[322,31,336,8],[322,33,336,31],[323,0,337,10],[323,16,337,16,"childRouter"],[323,29,337,27],[323,32,337,30,"childRouters"],[323,44,337,42],[323,45,337,43,"action"],[323,51,337,49],[323,52,337,50,"routeName"],[323,61,337,42],[323,62,337,10],[324,0,338,10],[324,16,338,14,"childState"],[324,26,338,24],[324,29,338,27],[324,31,338,10],[326,0,339,10],[326,16,339,14,"childRouter"],[326,29,339,10],[326,31,339,27],[327,0,340,12],[327,18,340,18,"childAction"],[327,30,340,29],[327,33,341,14,"action"],[327,39,341,20],[327,40,341,21,"action"],[327,46,341,14],[327,50,342,14,"NavigationActions"],[327,77,342,32,"init"],[327,81,342,14],[327,82,342,37],[328,0,342,39,"params"],[328,16,342,39,"params"],[328,22,342,45],[328,24,342,47,"action"],[328,30,342,53],[328,31,342,54,"params"],[329,0,342,37],[329,15,342,14],[329,16,340,12],[331,0,343,12,"childState"],[331,14,343,12,"childState"],[331,24,343,22],[331,27,343,25,"childRouter"],[331,40,343,36],[331,41,343,37,"getStateForAction"],[331,58,343,25],[331,59,343,55,"childAction"],[331,71,343,25],[331,72,343,12],[332,0,344,11],[334,0,345,10],[334,16,345,16,"routes"],[334,23,345,22],[334,59,345,29,"state"],[334,64,345,34],[334,65,345,35,"routes"],[334,71,345,22],[334,72,345,10],[336,0,346,10,"routes"],[336,12,346,10,"routes"],[336,19,346,16],[336,20,346,17,"routeIndex"],[336,30,346,16],[336,31,346,10],[337,0,347,12,"params"],[337,14,347,12,"params"],[337,20,347,18],[337,22,347,20,"action"],[337,28,347,26],[337,29,347,27,"params"],[338,0,346,10],[338,15,349,15,"childState"],[338,25,346,10],[339,0,350,12,"routeName"],[339,14,350,12,"routeName"],[339,23,350,21],[339,25,350,23,"action"],[339,31,350,29],[339,32,350,30,"routeName"],[339,41,346,10],[340,0,351,12,"key"],[340,14,351,12,"key"],[340,17,351,15],[340,19,351,17,"action"],[340,25,351,23],[340,26,351,24,"newKey"],[340,32,351,17],[340,36,351,34],[341,0,346,10],[342,0,353,10],[342,37,353,22,"state"],[342,42,353,10],[343,0,353,29,"routes"],[343,14,353,29,"routes"],[343,20,353,35],[343,22,353,29,"routes"],[344,0,353,10],[345,0,354,9],[346,0,355,7],[348,0,358,6],[348,12,359,8,"action"],[348,18,359,14],[348,19,359,15,"type"],[348,23,359,8],[348,28,359,24,"NavigationActions"],[348,55,359,42,"COMPLETE_TRANSITION"],[348,74,359,8],[348,79,360,9,"action"],[348,85,360,15],[348,86,360,16,"key"],[348,89,360,9],[348,93,360,23],[348,97,360,9],[348,101,360,31,"action"],[348,107,360,37],[348,108,360,38,"key"],[348,111,360,31],[348,116,360,46,"state"],[348,121,360,51],[348,122,360,52,"key"],[348,125,359,8],[348,130,361,8,"state"],[348,135,361,13],[348,136,361,14,"isTransitioning"],[348,151,358,6],[348,153,362,8],[349,0,363,8],[349,35,364,13,"state"],[349,40,363,8],[350,0,365,10,"isTransitioning"],[350,12,365,10,"isTransitioning"],[350,27,365,25],[350,29,365,27],[351,0,363,8],[352,0,367,7],[354,0,369,6],[354,12,369,10,"action"],[354,18,369,16],[354,19,369,17,"type"],[354,23,369,10],[354,28,369,26,"NavigationActions"],[354,55,369,44,"SET_PARAMS"],[354,65,369,6],[354,67,369,56],[355,0,370,8],[355,14,370,14,"key"],[355,17,370,17],[355,20,370,20,"action"],[355,26,370,26],[355,27,370,27,"key"],[355,30,370,8],[356,0,371,8],[356,14,371,14,"lastRoute"],[356,23,371,23],[356,26,371,26,"state"],[356,31,371,31],[356,32,371,32,"routes"],[356,38,371,26],[356,39,371,39,"find"],[356,43,371,26],[356,44,371,44],[356,54,371,44,"route"],[356,59,371,49],[357,0,371,49],[357,19,371,53,"route"],[357,24,371,58],[357,25,371,59,"key"],[357,28,371,53],[357,33,371,67,"key"],[357,36,371,49],[358,0,371,49],[358,11,371,26],[358,12,371,8],[360,0,372,8],[360,14,372,12,"lastRoute"],[360,23,372,8],[360,25,372,23],[361,0,373,10],[361,16,373,16,"params"],[361,22,373,22],[361,43,374,15,"lastRoute"],[361,52,374,24],[361,53,374,25,"params"],[361,59,373,22],[361,65,375,15,"action"],[361,71,375,21],[361,72,375,22,"params"],[361,78,373,22],[361,79,373,10],[363,0,377,10],[363,16,377,16,"routes"],[363,24,377,22],[363,60,377,29,"state"],[363,65,377,34],[363,66,377,35,"routes"],[363,72,377,22],[363,73,377,10],[365,0,378,10,"routes"],[365,12,378,10,"routes"],[365,20,378,16],[365,21,378,17,"state"],[365,26,378,22],[365,27,378,23,"routes"],[365,33,378,17],[365,34,378,30,"indexOf"],[365,41,378,17],[365,42,378,38,"lastRoute"],[365,51,378,17],[365,52,378,16],[365,53,378,10],[365,74,379,15,"lastRoute"],[365,83,378,10],[366,0,380,12,"params"],[366,14,380,12,"params"],[366,20,380,18],[366,22,380,12,"params"],[367,0,378,10],[368,0,382,10],[368,37,383,15,"state"],[368,42,382,10],[369,0,384,12,"routes"],[369,14,384,12,"routes"],[369,20,384,18],[369,22,384,12,"routes"],[370,0,382,10],[371,0,386,9],[372,0,387,7],[374,0,389,6],[374,12,389,10,"action"],[374,18,389,16],[374,19,389,17,"type"],[374,23,389,10],[374,28,389,26,"NavigationActions"],[374,55,389,44,"RESET"],[374,60,389,6],[374,62,389,51],[375,0,391,8],[375,14,391,12,"action"],[375,20,391,18],[375,21,391,19,"key"],[375,24,391,12],[375,28,391,26],[375,32,391,12],[375,36,391,34,"action"],[375,42,391,40],[375,43,391,41,"key"],[375,46,391,34],[375,50,391,48,"state"],[375,55,391,53],[375,56,391,54,"key"],[375,59,391,8],[375,61,391,59],[376,0,394,10],[376,19,394,17,"state"],[376,24,394,10],[377,0,395,9],[379,0,396,8],[379,14,396,14,"newStackActions"],[379,29,396,29],[379,32,396,32,"action"],[379,38,396,38],[379,39,396,39,"actions"],[379,46,396,8],[380,0,398,8],[380,35,399,13,"state"],[380,40,398,8],[381,0,400,10,"routes"],[381,12,400,10,"routes"],[381,18,400,16],[381,20,400,18,"newStackActions"],[381,35,400,33],[381,36,400,34,"map"],[381,39,400,18],[381,40,400,38],[381,50,400,38,"newStackAction"],[381,64,400,52],[381,66,400,56],[382,0,401,12],[382,18,401,18,"router"],[382,24,401,24],[382,27,401,27,"childRouters"],[382,39,401,39],[382,40,401,40,"newStackAction"],[382,54,401,54],[382,55,401,55,"routeName"],[382,64,401,39],[382,65,401,12],[383,0,403,12],[383,18,403,16,"childState"],[383,28,403,26],[383,31,403,29],[383,33,403,12],[385,0,405,12],[385,18,405,16,"router"],[385,24,405,12],[385,26,405,24],[386,0,406,14],[386,20,406,20,"childAction"],[386,33,406,31],[386,36,407,16,"newStackAction"],[386,50,407,30],[386,51,407,31,"action"],[386,57,407,16],[386,61,408,16,"NavigationActions"],[386,88,408,34,"init"],[386,92,408,16],[386,93,408,39],[387,0,408,41,"params"],[387,18,408,41,"params"],[387,24,408,47],[387,26,408,49,"newStackAction"],[387,40,408,63],[387,41,408,64,"params"],[388,0,408,39],[388,17,408,16],[388,18,406,14],[390,0,410,14,"childState"],[390,16,410,14,"childState"],[390,26,410,24],[390,29,410,27,"router"],[390,35,410,33],[390,36,410,34,"getStateForAction"],[390,53,410,27],[390,54,410,52,"childAction"],[390,67,410,27],[390,68,410,14],[391,0,411,13],[393,0,413,12],[394,0,414,14,"params"],[394,16,414,14,"params"],[394,22,414,20],[394,24,414,22,"newStackAction"],[394,38,414,36],[394,39,414,37,"params"],[395,0,413,12],[395,17,415,17,"childState"],[395,27,413,12],[396,0,416,14,"routeName"],[396,16,416,14,"routeName"],[396,25,416,23],[396,27,416,25,"newStackAction"],[396,41,416,39],[396,42,416,40,"routeName"],[396,51,413,12],[397,0,417,14,"key"],[397,16,417,14,"key"],[397,19,417,17],[397,21,417,19,"newStackAction"],[397,35,417,33],[397,36,417,34,"key"],[397,39,417,19],[397,43,417,41],[398,0,413,12],[399,0,419,11],[399,13,400,18],[399,14,398,8],[400,0,420,10,"index"],[400,12,420,10,"index"],[400,17,420,15],[400,19,420,17,"action"],[400,25,420,23],[400,26,420,24,"index"],[401,0,398,8],[402,0,422,7],[404,0,424,6],[404,12,425,8,"action"],[404,18,425,14],[404,19,425,15,"type"],[404,23,425,8],[404,28,425,24,"NavigationActions"],[404,55,425,42,"BACK"],[404,59,425,8],[404,63,426,8,"action"],[404,69,426,14],[404,70,426,15,"type"],[404,74,426,8],[404,79,426,24,"NavigationActions"],[404,106,426,42,"POP"],[404,109,424,6],[404,111,427,8],[405,0,427,8],[405,14,428,16,"key"],[405,18,427,8],[405,21,428,38,"action"],[405,27,427,8],[405,28,428,16,"key"],[405,31,427,8],[406,0,427,8],[406,14,428,21,"n"],[406,15,427,8],[406,18,428,38,"action"],[406,24,427,8],[406,25,428,21,"n"],[406,26,427,8],[407,0,427,8],[407,14,428,24,"immediate"],[407,23,427,8],[407,26,428,38,"action"],[407,32,427,8],[407,33,428,24,"immediate"],[407,42,427,8],[408,0,429,8],[408,14,429,12,"backRouteIndex"],[408,28,429,26],[408,31,429,29,"state"],[408,36,429,34],[408,37,429,35,"index"],[408,42,429,8],[410,0,430,8],[410,14,430,12,"action"],[410,20,430,18],[410,21,430,19,"type"],[410,25,430,12],[410,30,430,28,"NavigationActions"],[410,57,430,46,"POP"],[410,60,430,12],[410,64,430,53,"n"],[410,65,430,54],[410,69,430,58],[410,73,430,8],[410,75,430,64],[411,0,433,10,"backRouteIndex"],[411,12,433,10,"backRouteIndex"],[411,26,433,24],[411,29,433,27,"Math"],[411,33,433,31],[411,34,433,32,"max"],[411,37,433,27],[411,38,433,36],[411,39,433,27],[411,41,433,39,"state"],[411,46,433,44],[411,47,433,45,"index"],[411,52,433,39],[411,55,433,53,"n"],[411,56,433,39],[411,59,433,57],[411,60,433,27],[411,61,433,10],[412,0,434,9],[412,11,430,8],[412,17,434,15],[412,21,434,19,"key"],[412,25,434,15],[412,27,434,24],[413,0,435,10],[413,16,435,16,"backRoute"],[413,25,435,25],[413,28,435,28,"state"],[413,33,435,33],[413,34,435,34,"routes"],[413,40,435,28],[413,41,435,41,"find"],[413,45,435,28],[413,46,435,46],[413,56,435,46,"route"],[413,61,435,51],[414,0,435,51],[414,21,435,55,"route"],[414,26,435,60],[414,27,435,61,"key"],[414,30,435,55],[414,35,435,69,"key"],[414,39,435,51],[415,0,435,51],[415,13,435,28],[415,14,435,10],[416,0,436,10,"backRouteIndex"],[416,12,436,10,"backRouteIndex"],[416,26,436,24],[416,29,436,27,"state"],[416,34,436,32],[416,35,436,33,"routes"],[416,41,436,27],[416,42,436,40,"indexOf"],[416,49,436,27],[416,50,436,48,"backRoute"],[416,59,436,27],[416,60,436,10],[417,0,437,9],[419,0,439,8],[419,14,439,12,"backRouteIndex"],[419,28,439,26],[419,31,439,29],[419,32,439,8],[419,34,439,32],[420,0,440,10],[420,37,441,15,"state"],[420,42,440,10],[421,0,442,12,"routes"],[421,14,442,12,"routes"],[421,20,442,18],[421,22,442,20,"state"],[421,27,442,25],[421,28,442,26,"routes"],[421,34,442,20],[421,35,442,33,"slice"],[421,40,442,20],[421,41,442,39],[421,42,442,20],[421,44,442,42,"backRouteIndex"],[421,58,442,20],[421,59,440,10],[422,0,443,12,"index"],[422,14,443,12,"index"],[422,19,443,17],[422,21,443,19,"backRouteIndex"],[422,35,443,33],[422,38,443,36],[422,39,440,10],[423,0,444,12,"isTransitioning"],[423,14,444,12,"isTransitioning"],[423,29,444,27],[423,31,444,29,"immediate"],[423,40,444,38],[423,45,444,43],[424,0,440,10],[425,0,446,9],[425,11,439,8],[425,17,446,15],[425,21,447,10,"backRouteIndex"],[425,35,447,24],[425,40,447,29],[425,41,447,10],[425,45,448,10,"action"],[425,51,448,16],[425,52,448,17,"type"],[425,56,448,10],[425,61,448,26,"NavigationActions"],[425,88,448,44,"POP"],[425,91,446,15],[425,93,449,10],[426,0,450,10],[426,37,451,15,"state"],[426,42,450,10],[427,0,453,9],[428,0,454,7],[430,0,455,6],[430,15,455,13,"state"],[430,20,455,6],[431,0,456,5],[431,7,142,9],[432,0,458,4,"getPathAndParamsForState"],[432,6,458,4,"getPathAndParamsForState"],[432,30,142,9],[432,66,458,29,"state"],[432,71,142,9],[432,73,458,36],[433,0,459,6],[433,12,459,12,"route"],[433,17,459,17],[433,20,459,20,"state"],[433,25,459,25],[433,26,459,26,"routes"],[433,32,459,20],[433,33,459,33,"state"],[433,38,459,38],[433,39,459,39,"index"],[433,44,459,20],[433,45,459,6],[434,0,460,6],[434,12,460,12,"routeName"],[434,21,460,21],[434,24,460,24,"route"],[434,29,460,29],[434,30,460,30,"routeName"],[434,39,460,6],[435,0,461,6],[435,12,461,12,"screen"],[435,18,461,18],[435,21,461,21],[435,57,461,43,"routeConfigs"],[435,69,461,21],[435,71,461,57,"routeName"],[435,80,461,21],[435,81,461,6],[436,0,462,6],[436,12,462,12,"subPath"],[436,19,462,19],[436,22,462,22,"pathsByRouteNames"],[436,39,462,39],[436,40,462,40,"routeName"],[436,49,462,39],[436,50,462,22],[436,51,462,51,"toPath"],[436,57,462,22],[436,58,462,58,"route"],[436,63,462,63],[436,64,462,64,"params"],[436,70,462,22],[436,71,462,6],[437,0,463,6],[437,12,463,10,"path"],[437,16,463,14],[437,19,463,17,"subPath"],[437,26,463,6],[438,0,464,6],[438,12,464,10,"params"],[438,18,464,16],[438,21,464,19,"route"],[438,26,464,24],[438,27,464,25,"params"],[438,33,464,6],[440,0,465,6],[440,12,465,10,"screen"],[440,18,465,16],[440,22,465,20,"screen"],[440,28,465,26],[440,29,465,27,"router"],[440,35,465,6],[440,37,465,35],[441,0,466,8],[441,14,466,14,"stateRoute"],[441,24,466,24],[441,27,466,27,"route"],[441,32,466,8],[442,0,469,8],[442,14,469,14,"child"],[442,19,469,19],[442,22,469,22,"screen"],[442,28,469,28],[442,29,469,29,"router"],[442,35,469,22],[442,36,469,36,"getPathAndParamsForState"],[442,60,469,22],[442,61,469,61,"stateRoute"],[442,71,469,22],[442,72,469,8],[443,0,470,8,"path"],[443,10,470,8,"path"],[443,14,470,12],[443,17,470,15,"subPath"],[443,24,470,22],[443,27,470,28,"subPath"],[443,34,470,22],[443,43,470,39,"child"],[443,48,470,44],[443,49,470,45,"path"],[443,53,470,22],[443,56,470,54,"child"],[443,61,470,59],[443,62,470,60,"path"],[443,66,470,8],[444,0,471,8,"params"],[444,10,471,8,"params"],[444,16,471,14],[444,19,471,17,"child"],[444,24,471,22],[444,25,471,23,"params"],[444,31,471,17],[444,52,471,37,"params"],[444,58,471,17],[444,64,471,48,"child"],[444,69,471,53],[444,70,471,54,"params"],[444,76,471,17],[444,80,471,65,"params"],[444,86,471,8],[445,0,472,7],[447,0,473,6],[447,15,473,13],[448,0,474,8,"path"],[448,10,474,8,"path"],[448,14,474,12],[448,16,474,8,"path"],[448,20,473,13],[449,0,475,8,"params"],[449,10,475,8,"params"],[449,16,475,14],[449,18,475,8,"params"],[450,0,473,13],[450,9,473,6],[451,0,477,5],[451,7,142,9],[452,0,479,4,"getActionForPathAndParams"],[452,6,479,4,"getActionForPathAndParams"],[452,31,142,9],[452,68,479,30,"pathToResolve"],[452,81,142,9],[452,83,479,45,"inputParams"],[452,94,142,9],[452,96,479,58],[453,0,482,6],[453,12,482,10],[453,13,482,11,"pathToResolve"],[453,26,482,6],[453,28,482,26],[454,0,483,8],[454,17,483,15,"NavigationActions"],[454,44,483,33,"navigate"],[454,52,483,15],[454,53,483,42],[455,0,484,10,"routeName"],[455,12,484,10,"routeName"],[455,21,484,19],[455,23,484,21,"initialRouteName"],[456,0,483,42],[456,11,483,15],[456,12,483,8],[457,0,486,7],[459,0,479,58],[459,35,488,47,"pathToResolve"],[459,48,488,60],[459,49,488,61,"split"],[459,54,488,47],[459,55,488,67],[459,58,488,47],[459,59,479,58],[460,0,479,58],[461,0,479,58],[461,12,488,13,"pathNameToResolve"],[461,29,479,58],[462,0,479,58],[462,12,488,32,"queryString"],[462,23,479,58],[464,0,492,6],[464,12,492,10,"matchedRouteName"],[464,28,492,6],[465,0,493,6],[465,12,493,10,"pathMatch"],[465,21,493,6],[466,0,494,6],[466,12,494,10,"pathMatchKeys"],[466,25,494,6],[468,0,497,6],[468,29,497,38,"paths"],[468,34,497,6],[468,194,497,45],[469,0,497,45],[471,0,497,45],[472,0,497,45],[473,0,497,45],[474,0,497,45],[475,0,497,45],[476,0,497,45],[477,0,497,45],[478,0,497,45],[480,0,497,45],[482,0,497,45],[484,0,497,45],[484,14,497,18,"routeName"],[484,24,497,45],[485,0,497,45],[485,14,497,29,"path"],[485,19,497,45],[486,0,497,45],[486,14,498,16,"re"],[486,17,497,45],[486,20,498,29,"path"],[486,25,497,45],[486,26,498,16,"re"],[486,28,497,45],[487,0,497,45],[487,14,498,20,"keys"],[487,19,497,45],[487,22,498,29,"path"],[487,27,497,45],[487,28,498,20,"keys"],[487,32,497,45],[488,0,499,8,"pathMatch"],[488,10,499,8,"pathMatch"],[488,19,499,17],[488,22,499,20,"re"],[488,25,499,22],[488,26,499,23,"exec"],[488,30,499,20],[488,31,499,28,"pathNameToResolve"],[488,48,499,20],[488,49,499,8],[490,0,500,8],[490,14,500,12,"pathMatch"],[490,23,500,21],[490,27,500,25,"pathMatch"],[490,36,500,34],[490,37,500,35,"length"],[490,43,500,8],[490,45,500,43],[491,0,501,10,"pathMatchKeys"],[491,12,501,10,"pathMatchKeys"],[491,25,501,23],[491,28,501,26,"keys"],[491,33,501,10],[492,0,502,10,"matchedRouteName"],[492,12,502,10,"matchedRouteName"],[492,28,502,26],[492,31,502,29,"routeName"],[492,41,502,10],[493,0,503,10],[494,0,504,9],[495,0,505,7],[497,0,508,6],[497,12,508,10],[497,13,508,11,"matchedRouteName"],[497,29,508,6],[497,31,508,29],[498,0,511,8],[498,14,511,12],[498,15,511,13,"pathToResolve"],[498,28,511,8],[498,30,511,28],[499,0,512,10],[499,19,512,17,"NavigationActions"],[499,46,512,35,"navigate"],[499,54,512,17],[499,55,512,44],[500,0,513,12,"routeName"],[500,14,513,12,"routeName"],[500,23,513,21],[500,25,513,23,"initialRouteName"],[501,0,512,44],[501,13,512,17],[501,14,512,10],[502,0,515,9],[504,0,516,8],[504,17,516,15],[504,21,516,8],[505,0,517,7],[507,0,523,6],[507,12,523,10,"nestedAction"],[507,24,523,6],[508,0,524,6],[508,12,524,10,"nestedQueryString"],[508,29,524,27],[508,32,524,30,"queryString"],[508,43,524,41],[508,46,524,44],[508,52,524,50,"queryString"],[508,63,524,41],[508,66,524,64],[508,68,524,6],[510,0,525,6],[510,12,525,10,"childRouters"],[510,24,525,22],[510,25,525,23,"matchedRouteName"],[510,41,525,22],[510,42,525,6],[510,44,525,42],[511,0,526,8,"nestedAction"],[511,10,526,8,"nestedAction"],[511,22,526,20],[511,25,526,23,"childRouters"],[511,37,526,35],[511,38,526,36,"matchedRouteName"],[511,54,526,35],[511,55,526,23],[511,56,526,54,"getActionForPathAndParams"],[511,81,526,23],[511,82,527,10,"pathMatch"],[511,91,527,19],[511,92,527,20,"slice"],[511,97,527,10],[511,98,527,26,"pathMatchKeys"],[511,111,527,39],[511,112,527,40,"length"],[511,118,527,10],[511,120,527,48,"join"],[511,124,527,10],[511,125,527,53],[511,128,527,10],[511,132,527,60,"nestedQueryString"],[511,149,526,23],[511,150,526,8],[513,0,529,8],[513,14,529,12],[513,15,529,13,"nestedAction"],[513,27,529,8],[513,29,529,27],[514,0,530,10],[514,19,530,17],[514,23,530,10],[515,0,531,9],[516,0,532,7],[518,0,536,6],[518,12,536,12,"queryParams"],[518,23,536,23],[518,26,536,26],[518,27,536,27,"isEmpty"],[518,34,536,34],[518,35,536,35,"inputParams"],[518,46,536,34],[518,47,536,26],[518,50,537,10,"inputParams"],[518,61,536,26],[518,64,538,10],[518,65,538,11,"queryString"],[518,76,538,22],[518,80,538,26],[518,82,538,10],[518,84,538,30,"split"],[518,89,538,10],[518,90,538,36],[518,93,538,10],[518,95,538,41,"reduce"],[518,101,538,10],[518,102,538,48],[518,112,538,49,"result"],[518,118,538,48],[518,120,538,57,"item"],[518,124,538,48],[518,126,538,66],[519,0,539,12],[519,14,539,16,"item"],[519,18,539,20],[519,23,539,25],[519,25,539,12],[519,27,539,29],[520,0,540,14],[520,16,540,20,"nextResult"],[520,26,540,30],[520,29,540,33,"result"],[520,35,540,39],[520,39,540,43],[520,41,540,14],[522,0,539,29],[522,30,541,35,"item"],[522,34,541,39],[522,35,541,40,"split"],[522,40,541,35],[522,41,541,46],[522,44,541,35],[522,45,539,29],[523,0,539,29],[524,0,539,29],[524,16,541,21,"key"],[524,19,539,29],[525,0,539,29],[525,16,541,26,"value"],[525,21,539,29],[527,0,542,14,"nextResult"],[527,12,542,14,"nextResult"],[527,22,542,24],[527,23,542,25,"key"],[527,26,542,24],[527,27,542,14],[527,30,542,32,"value"],[527,35,542,14],[528,0,543,14],[528,19,543,21,"nextResult"],[528,29,543,14],[529,0,544,13],[531,0,545,12],[531,17,545,19,"result"],[531,23,545,12],[532,0,546,11],[532,9,538,10],[532,11,546,13],[532,15,538,10],[532,16,536,6],[533,0,550,6],[533,12,550,12,"params"],[533,18,550,18],[533,21,550,21,"pathMatch"],[533,30,550,30],[533,31,550,31,"slice"],[533,36,550,21],[533,37,550,37],[533,38,550,21],[533,40,550,40,"reduce"],[533,46,550,21],[533,47,550,47],[533,57,550,48,"result"],[533,63,550,47],[533,65,550,56,"matchResult"],[533,76,550,47],[533,78,550,69,"i"],[533,79,550,47],[533,81,550,75],[534,0,551,8],[534,14,551,14,"key"],[534,17,551,17],[534,20,551,20,"pathMatchKeys"],[534,33,551,33],[534,34,551,34,"i"],[534,35,551,33],[534,36,551,8],[536,0,552,8],[536,14,552,12,"key"],[536,17,552,15],[536,18,552,16,"asterisk"],[536,26,552,12],[536,30,552,28],[536,31,552,29,"key"],[536,34,552,8],[536,36,552,34],[537,0,553,10],[537,19,553,17,"result"],[537,25,553,10],[538,0,554,9],[540,0,555,8],[540,14,555,14,"nextResult"],[540,24,555,24],[540,27,555,27,"result"],[540,33,555,33],[540,37,555,37],[540,39,555,8],[541,0,556,8],[541,14,556,14,"paramName"],[541,23,556,23],[541,26,556,26,"key"],[541,29,556,29],[541,30,556,30,"name"],[541,34,556,8],[542,0,558,8],[542,14,558,12,"decodedMatchResult"],[542,32,558,8],[544,0,559,8],[544,14,559,12],[545,0,560,10,"decodedMatchResult"],[545,12,560,10,"decodedMatchResult"],[545,30,560,28],[545,33,560,31,"decodeURIComponent"],[545,51,560,49],[545,52,560,50,"matchResult"],[545,63,560,49],[545,64,560,10],[546,0,561,9],[546,11,559,8],[546,12,561,10],[546,19,561,17,"e"],[546,20,561,10],[546,22,561,20],[546,23,563,9],[548,0,565,8,"nextResult"],[548,10,565,8,"nextResult"],[548,20,565,18],[548,21,565,19,"paramName"],[548,30,565,18],[548,31,565,8],[548,34,565,32,"decodedMatchResult"],[548,52,565,50],[548,56,565,54,"matchResult"],[548,67,565,8],[549,0,566,8],[549,17,566,15,"nextResult"],[549,27,566,8],[550,0,567,7],[550,9,550,21],[550,11,567,9,"queryParams"],[550,22,550,21],[550,23,550,6],[551,0,569,6],[551,15,569,13,"NavigationActions"],[551,42,569,31,"navigate"],[551,50,569,13],[552,0,570,8,"routeName"],[552,10,570,8,"routeName"],[552,19,570,17],[552,21,570,19,"matchedRouteName"],[553,0,569,13],[553,11,571,12,"params"],[553,17,571,18],[553,20,571,21],[554,0,571,23,"params"],[554,10,571,23,"params"],[554,16,571,29],[554,18,571,23,"params"],[555,0,571,21],[555,9,571,18],[555,12,571,34],[555,14,569,13],[555,20,572,12,"nestedAction"],[555,32,572,24],[555,35,572,27],[556,0,572,29,"action"],[556,10,572,29,"action"],[556,16,572,35],[556,18,572,37,"nestedAction"],[557,0,572,27],[557,9,572,24],[557,12,572,54],[557,14,569,13],[557,16,569,6],[558,0,574,5],[558,7,142,9],[559,0,576,4,"getScreenOptions"],[559,6,576,4,"getScreenOptions"],[559,22,576,20],[559,24,576,22],[559,57,577,6,"routeConfigs"],[559,69,576,22],[559,71,578,6,"stackConfig"],[559,82,578,17],[559,83,578,18,"navigationOptions"],[559,100,576,22],[559,101,142,9],[560,0,581,4,"getScreenConfig"],[560,6,581,4,"getScreenConfig"],[560,21,581,19],[560,23,581,21,"getScreenConfigDeprecated"],[561,0,142,9],[561,5,142,2],[562,0,583,1],[562,3]]},"type":"js/module"}]}