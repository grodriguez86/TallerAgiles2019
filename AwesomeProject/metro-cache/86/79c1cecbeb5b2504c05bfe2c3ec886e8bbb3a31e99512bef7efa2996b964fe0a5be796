{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"../utils/shallowEqual","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ScenesReducer;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../utils/invariant\"));\n\n  var _shallowEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../utils/shallowEqual\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var SCENE_KEY_PREFIX = 'scene_';\n\n  function compareKey(one, two) {\n    var delta = one.length - two.length;\n\n    if (delta > 0) {\n      return 1;\n    }\n\n    if (delta < 0) {\n      return -1;\n    }\n\n    return one > two ? 1 : -1;\n  }\n\n  function compareScenes(one, two) {\n    if (one.index > two.index) {\n      return 1;\n    }\n\n    if (one.index < two.index) {\n      return -1;\n    }\n\n    return compareKey(one.key, two.key);\n  }\n\n  function areScenesShallowEqual(one, two) {\n    return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);\n  }\n\n  function areRoutesShallowEqual(one, two) {\n    if (!one || !two) {\n      return one === two;\n    }\n\n    if (one.key !== two.key) {\n      return false;\n    }\n\n    return (0, _shallowEqual.default)(one, two);\n  }\n\n  function ScenesReducer(scenes, nextState, prevState) {\n    if (prevState === nextState) {\n      return scenes;\n    }\n\n    var prevScenes = new Map();\n    var freshScenes = new Map();\n    var staleScenes = new Map();\n    scenes.forEach(function (scene) {\n      var key = scene.key;\n\n      if (scene.isStale) {\n        staleScenes.set(key, scene);\n      }\n\n      prevScenes.set(key, scene);\n    });\n    var nextKeys = new Set();\n    nextState.routes.forEach(function (route, index) {\n      var key = SCENE_KEY_PREFIX + route.key;\n      var scene = {\n        index: index,\n        isActive: false,\n        isStale: false,\n        key: key,\n        route: route\n      };\n      (0, _invariant.default)(!nextKeys.has(key), \"navigation.state.routes[\" + index + \"].key \\\"\" + key + \"\\\" conflicts with \" + 'another route!');\n      nextKeys.add(key);\n\n      if (staleScenes.has(key)) {\n        staleScenes.delete(key);\n      }\n\n      freshScenes.set(key, scene);\n    });\n\n    if (prevState) {\n      prevState.routes.forEach(function (route, index) {\n        var key = SCENE_KEY_PREFIX + route.key;\n\n        if (freshScenes.has(key)) {\n          return;\n        }\n\n        staleScenes.set(key, {\n          index: index,\n          isActive: false,\n          isStale: true,\n          key: key,\n          route: route\n        });\n      });\n    }\n\n    var nextScenes = [];\n\n    var mergeScene = function mergeScene(nextScene) {\n      var key = nextScene.key;\n      var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;\n\n      if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {\n        nextScenes.push(prevScene);\n      } else {\n        nextScenes.push(nextScene);\n      }\n    };\n\n    staleScenes.forEach(mergeScene);\n    freshScenes.forEach(mergeScene);\n    nextScenes.sort(compareScenes);\n    var activeScenesCount = 0;\n    nextScenes.forEach(function (scene, ii) {\n      var isActive = !scene.isStale && scene.index === nextState.index;\n\n      if (isActive !== scene.isActive) {\n        nextScenes[ii] = _objectSpread({}, scene, {\n          isActive: isActive\n        });\n      }\n\n      if (isActive) {\n        activeScenesCount++;\n      }\n    });\n    (0, _invariant.default)(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);\n\n    if (nextScenes.length !== scenes.length) {\n      return nextScenes;\n    }\n\n    if (nextScenes.some(function (scene, index) {\n      return !areScenesShallowEqual(scenes[index], scene);\n    })) {\n      return nextScenes;\n    }\n\n    return scenes;\n  }\n});","map":[[11,0,1,0],[13,0,2,0],[19,0,4,0],[19,6,4,6,"SCENE_KEY_PREFIX"],[19,22,4,22],[19,25,4,25],[19,33,4,0],[21,0,9,0],[21,11,9,9,"compareKey"],[21,21,9,0],[21,22,9,20,"one"],[21,25,9,0],[21,27,9,25,"two"],[21,30,9,0],[21,32,9,30],[22,0,10,2],[22,8,10,8,"delta"],[22,13,10,13],[22,16,10,16,"one"],[22,19,10,19],[22,20,10,20,"length"],[22,26,10,16],[22,29,10,29,"two"],[22,32,10,32],[22,33,10,33,"length"],[22,39,10,2],[24,0,11,2],[24,8,11,6,"delta"],[24,13,11,11],[24,16,11,14],[24,17,11,2],[24,19,11,17],[25,0,12,4],[25,13,12,11],[25,14,12,4],[26,0,13,3],[28,0,14,2],[28,8,14,6,"delta"],[28,13,14,11],[28,16,14,14],[28,17,14,2],[28,19,14,17],[29,0,15,4],[29,13,15,11],[29,14,15,12],[29,15,15,4],[30,0,16,3],[32,0,17,2],[32,11,17,9,"one"],[32,14,17,12],[32,17,17,15,"two"],[32,20,17,9],[32,23,17,21],[32,24,17,9],[32,27,17,25],[32,28,17,26],[32,29,17,2],[33,0,18,1],[35,0,23,0],[35,11,23,9,"compareScenes"],[35,24,23,0],[35,25,23,23,"one"],[35,28,23,0],[35,30,23,28,"two"],[35,33,23,0],[35,35,23,33],[36,0,24,2],[36,8,24,6,"one"],[36,11,24,9],[36,12,24,10,"index"],[36,17,24,6],[36,20,24,18,"two"],[36,23,24,21],[36,24,24,22,"index"],[36,29,24,2],[36,31,24,29],[37,0,25,4],[37,13,25,11],[37,14,25,4],[38,0,26,3],[40,0,27,2],[40,8,27,6,"one"],[40,11,27,9],[40,12,27,10,"index"],[40,17,27,6],[40,20,27,18,"two"],[40,23,27,21],[40,24,27,22,"index"],[40,29,27,2],[40,31,27,29],[41,0,28,4],[41,13,28,11],[41,14,28,12],[41,15,28,4],[42,0,29,3],[44,0,31,2],[44,11,31,9,"compareKey"],[44,21,31,19],[44,22,31,20,"one"],[44,25,31,23],[44,26,31,24,"key"],[44,29,31,19],[44,31,31,29,"two"],[44,34,31,32],[44,35,31,33,"key"],[44,38,31,19],[44,39,31,2],[45,0,32,1],[47,0,37,0],[47,11,37,9,"areScenesShallowEqual"],[47,32,37,0],[47,33,37,31,"one"],[47,36,37,0],[47,38,37,36,"two"],[47,41,37,0],[47,43,37,41],[48,0,38,2],[48,11,39,4,"one"],[48,14,39,7],[48,15,39,8,"key"],[48,18,39,4],[48,23,39,16,"two"],[48,26,39,19],[48,27,39,20,"key"],[48,30,39,4],[48,34,40,4,"one"],[48,37,40,7],[48,38,40,8,"index"],[48,43,40,4],[48,48,40,18,"two"],[48,51,40,21],[48,52,40,22,"index"],[48,57,39,4],[48,61,41,4,"one"],[48,64,41,7],[48,65,41,8,"isStale"],[48,72,41,4],[48,77,41,20,"two"],[48,80,41,23],[48,81,41,24,"isStale"],[48,88,39,4],[48,92,42,4,"one"],[48,95,42,7],[48,96,42,8,"isActive"],[48,104,42,4],[48,109,42,21,"two"],[48,112,42,24],[48,113,42,25,"isActive"],[48,121,39,4],[48,125,43,4,"areRoutesShallowEqual"],[48,146,43,25],[48,147,43,26,"one"],[48,150,43,29],[48,151,43,30,"route"],[48,156,43,25],[48,158,43,37,"two"],[48,161,43,40],[48,162,43,41,"route"],[48,167,43,25],[48,168,38,2],[49,0,45,1],[51,0,50,0],[51,11,50,9,"areRoutesShallowEqual"],[51,32,50,0],[51,33,50,31,"one"],[51,36,50,0],[51,38,50,36,"two"],[51,41,50,0],[51,43,50,41],[52,0,51,2],[52,8,51,6],[52,9,51,7,"one"],[52,12,51,6],[52,16,51,14],[52,17,51,15,"two"],[52,20,51,2],[52,22,51,20],[53,0,52,4],[53,13,52,11,"one"],[53,16,52,14],[53,21,52,19,"two"],[53,24,52,4],[54,0,53,3],[56,0,55,2],[56,8,55,6,"one"],[56,11,55,9],[56,12,55,10,"key"],[56,15,55,6],[56,20,55,18,"two"],[56,23,55,21],[56,24,55,22,"key"],[56,27,55,2],[56,29,55,27],[57,0,56,4],[57,13,56,11],[57,18,56,4],[58,0,57,3],[60,0,59,2],[60,11,59,9],[60,38,59,22,"one"],[60,41,59,9],[60,43,59,27,"two"],[60,46,59,9],[60,47,59,2],[61,0,60,1],[63,0,62,15],[63,11,62,24,"ScenesReducer"],[63,24,62,15],[63,25,62,38,"scenes"],[63,31,62,15],[63,33,62,46,"nextState"],[63,42,62,15],[63,44,62,57,"prevState"],[63,53,62,15],[63,55,62,68],[64,0,63,2],[64,8,63,6,"prevState"],[64,17,63,15],[64,22,63,20,"nextState"],[64,31,63,2],[64,33,63,31],[65,0,64,4],[65,13,64,11,"scenes"],[65,19,64,4],[66,0,65,3],[68,0,67,2],[68,8,67,8,"prevScenes"],[68,18,67,18],[68,21,67,21],[68,25,67,25,"Map"],[68,28,67,21],[68,30,67,2],[69,0,68,2],[69,8,68,8,"freshScenes"],[69,19,68,19],[69,22,68,22],[69,26,68,26,"Map"],[69,29,68,22],[69,31,68,2],[70,0,69,2],[70,8,69,8,"staleScenes"],[70,19,69,19],[70,22,69,22],[70,26,69,26,"Map"],[70,29,69,22],[70,31,69,2],[71,0,72,2,"scenes"],[71,4,72,2,"scenes"],[71,10,72,8],[71,11,72,9,"forEach"],[71,18,72,2],[71,19,72,17],[71,29,72,17,"scene"],[71,34,72,22],[71,36,72,26],[72,0,72,26],[72,10,73,12,"key"],[72,13,72,26],[72,16,73,20,"scene"],[72,21,72,26],[72,22,73,12,"key"],[72,25,72,26],[74,0,74,4],[74,10,74,8,"scene"],[74,15,74,13],[74,16,74,14,"isStale"],[74,23,74,4],[74,25,74,23],[75,0,75,6,"staleScenes"],[75,8,75,6,"staleScenes"],[75,19,75,17],[75,20,75,18,"set"],[75,23,75,6],[75,24,75,22,"key"],[75,27,75,6],[75,29,75,27,"scene"],[75,34,75,6],[76,0,76,5],[78,0,77,4,"prevScenes"],[78,6,77,4,"prevScenes"],[78,16,77,14],[78,17,77,15,"set"],[78,20,77,4],[78,21,77,19,"key"],[78,24,77,4],[78,26,77,24,"scene"],[78,31,77,4],[79,0,78,3],[79,5,72,2],[80,0,80,2],[80,8,80,8,"nextKeys"],[80,16,80,16],[80,19,80,19],[80,23,80,23,"Set"],[80,26,80,19],[80,28,80,2],[81,0,81,2,"nextState"],[81,4,81,2,"nextState"],[81,13,81,11],[81,14,81,12,"routes"],[81,20,81,2],[81,21,81,19,"forEach"],[81,28,81,2],[81,29,81,27],[81,39,81,28,"route"],[81,44,81,27],[81,46,81,35,"index"],[81,51,81,27],[81,53,81,45],[82,0,82,4],[82,10,82,10,"key"],[82,13,82,13],[82,16,82,16,"SCENE_KEY_PREFIX"],[82,32,82,32],[82,35,82,35,"route"],[82,40,82,40],[82,41,82,41,"key"],[82,44,82,4],[83,0,83,4],[83,10,83,10,"scene"],[83,15,83,15],[83,18,83,18],[84,0,84,6,"index"],[84,8,84,6,"index"],[84,13,84,11],[84,15,84,6,"index"],[84,20,83,18],[85,0,85,6,"isActive"],[85,8,85,6,"isActive"],[85,16,85,14],[85,18,85,16],[85,23,83,18],[86,0,86,6,"isStale"],[86,8,86,6,"isStale"],[86,15,86,13],[86,17,86,15],[86,22,83,18],[87,0,87,6,"key"],[87,8,87,6,"key"],[87,11,87,9],[87,13,87,6,"key"],[87,16,83,18],[88,0,88,6,"route"],[88,8,88,6,"route"],[88,13,88,11],[88,15,88,6,"route"],[89,0,83,18],[89,7,83,4],[90,0,90,4],[90,30,91,6],[90,31,91,7,"nextKeys"],[90,39,91,15],[90,40,91,16,"has"],[90,43,91,7],[90,44,91,20,"key"],[90,47,91,7],[90,48,90,4],[90,50,92,6],[90,79,92,33,"index"],[90,84,92,6],[90,100,92,48,"key"],[90,103,92,6],[90,129,93,8],[90,145,90,4],[91,0,95,4,"nextKeys"],[91,6,95,4,"nextKeys"],[91,14,95,12],[91,15,95,13,"add"],[91,18,95,4],[91,19,95,17,"key"],[91,22,95,4],[93,0,97,4],[93,10,97,8,"staleScenes"],[93,21,97,19],[93,22,97,20,"has"],[93,25,97,8],[93,26,97,24,"key"],[93,29,97,8],[93,30,97,4],[93,32,97,30],[94,0,100,6,"staleScenes"],[94,8,100,6,"staleScenes"],[94,19,100,17],[94,20,100,18,"delete"],[94,26,100,6],[94,27,100,25,"key"],[94,30,100,6],[95,0,101,5],[97,0,102,4,"freshScenes"],[97,6,102,4,"freshScenes"],[97,17,102,15],[97,18,102,16,"set"],[97,21,102,4],[97,22,102,20,"key"],[97,25,102,4],[97,27,102,25,"scene"],[97,32,102,4],[98,0,103,3],[98,5,81,2],[100,0,105,2],[100,8,105,6,"prevState"],[100,17,105,2],[100,19,105,17],[101,0,107,4,"prevState"],[101,6,107,4,"prevState"],[101,15,107,13],[101,16,107,14,"routes"],[101,22,107,4],[101,23,107,21,"forEach"],[101,30,107,4],[101,31,107,29],[101,41,107,30,"route"],[101,46,107,29],[101,48,107,37,"index"],[101,53,107,29],[101,55,107,47],[102,0,108,6],[102,12,108,12,"key"],[102,15,108,15],[102,18,108,18,"SCENE_KEY_PREFIX"],[102,34,108,34],[102,37,108,37,"route"],[102,42,108,42],[102,43,108,43,"key"],[102,46,108,6],[104,0,109,6],[104,12,109,10,"freshScenes"],[104,23,109,21],[104,24,109,22,"has"],[104,27,109,10],[104,28,109,26,"key"],[104,31,109,10],[104,32,109,6],[104,34,109,32],[105,0,110,8],[106,0,111,7],[108,0,112,6,"staleScenes"],[108,8,112,6,"staleScenes"],[108,19,112,17],[108,20,112,18,"set"],[108,23,112,6],[108,24,112,22,"key"],[108,27,112,6],[108,29,112,27],[109,0,113,8,"index"],[109,10,113,8,"index"],[109,15,113,13],[109,17,113,8,"index"],[109,22,112,27],[110,0,114,8,"isActive"],[110,10,114,8,"isActive"],[110,18,114,16],[110,20,114,18],[110,25,112,27],[111,0,115,8,"isStale"],[111,10,115,8,"isStale"],[111,17,115,15],[111,19,115,17],[111,23,112,27],[112,0,116,8,"key"],[112,10,116,8,"key"],[112,13,116,11],[112,15,116,8,"key"],[112,18,112,27],[113,0,117,8,"route"],[113,10,117,8,"route"],[113,15,117,13],[113,17,117,8,"route"],[114,0,112,27],[114,9,112,6],[115,0,119,5],[115,7,107,4],[116,0,120,3],[118,0,122,2],[118,8,122,8,"nextScenes"],[118,18,122,18],[118,21,122,21],[118,23,122,2],[120,0,124,2],[120,8,124,8,"mergeScene"],[120,18,124,18],[120,21,124,21],[120,30,124,8,"mergeScene"],[120,40,124,21],[120,41,124,21,"nextScene"],[120,50,124,30],[120,52,124,34],[121,0,124,34],[121,10,125,12,"key"],[121,13,124,34],[121,16,125,20,"nextScene"],[121,25,124,34],[121,26,125,12,"key"],[121,29,124,34],[122,0,126,4],[122,10,126,10,"prevScene"],[122,19,126,19],[122,22,126,22,"prevScenes"],[122,32,126,32],[122,33,126,33,"has"],[122,36,126,22],[122,37,126,37,"key"],[122,40,126,22],[122,44,126,44,"prevScenes"],[122,54,126,54],[122,55,126,55,"get"],[122,58,126,44],[122,59,126,59,"key"],[122,62,126,44],[122,63,126,22],[122,66,126,66],[122,70,126,4],[124,0,127,4],[124,10,127,8,"prevScene"],[124,19,127,17],[124,23,127,21,"areScenesShallowEqual"],[124,44,127,42],[124,45,127,43,"prevScene"],[124,54,127,42],[124,56,127,54,"nextScene"],[124,65,127,42],[124,66,127,4],[124,68,127,66],[125,0,130,6,"nextScenes"],[125,8,130,6,"nextScenes"],[125,18,130,16],[125,19,130,17,"push"],[125,23,130,6],[125,24,130,22,"prevScene"],[125,33,130,6],[126,0,131,5],[126,7,127,4],[126,13,131,11],[127,0,132,6,"nextScenes"],[127,8,132,6,"nextScenes"],[127,18,132,16],[127,19,132,17,"push"],[127,23,132,6],[127,24,132,22,"nextScene"],[127,33,132,6],[128,0,133,5],[129,0,134,3],[129,5,124,2],[131,0,136,2,"staleScenes"],[131,4,136,2,"staleScenes"],[131,15,136,13],[131,16,136,14,"forEach"],[131,23,136,2],[131,24,136,22,"mergeScene"],[131,34,136,2],[132,0,137,2,"freshScenes"],[132,4,137,2,"freshScenes"],[132,15,137,13],[132,16,137,14,"forEach"],[132,23,137,2],[132,24,137,22,"mergeScene"],[132,34,137,2],[133,0,139,2,"nextScenes"],[133,4,139,2,"nextScenes"],[133,14,139,12],[133,15,139,13,"sort"],[133,19,139,2],[133,20,139,18,"compareScenes"],[133,33,139,2],[134,0,141,2],[134,8,141,6,"activeScenesCount"],[134,25,141,23],[134,28,141,26],[134,29,141,2],[135,0,142,2,"nextScenes"],[135,4,142,2,"nextScenes"],[135,14,142,12],[135,15,142,13,"forEach"],[135,22,142,2],[135,23,142,21],[135,33,142,22,"scene"],[135,38,142,21],[135,40,142,29,"ii"],[135,42,142,21],[135,44,142,36],[136,0,143,4],[136,10,143,10,"isActive"],[136,18,143,18],[136,21,143,21],[136,22,143,22,"scene"],[136,27,143,27],[136,28,143,28,"isStale"],[136,35,143,21],[136,39,143,39,"scene"],[136,44,143,44],[136,45,143,45,"index"],[136,50,143,39],[136,55,143,55,"nextState"],[136,64,143,64],[136,65,143,65,"index"],[136,70,143,4],[138,0,144,4],[138,10,144,8,"isActive"],[138,18,144,16],[138,23,144,21,"scene"],[138,28,144,26],[138,29,144,27,"isActive"],[138,37,144,4],[138,39,144,37],[139,0,145,6,"nextScenes"],[139,8,145,6,"nextScenes"],[139,18,145,16],[139,19,145,17,"ii"],[139,21,145,16],[139,22,145,6],[139,43,146,11,"scene"],[139,48,145,6],[140,0,147,8,"isActive"],[140,10,147,8,"isActive"],[140,18,147,16],[140,20,147,8,"isActive"],[141,0,145,6],[142,0,149,5],[144,0,150,4],[144,10,150,8,"isActive"],[144,18,150,4],[144,20,150,18],[145,0,151,6,"activeScenesCount"],[145,8,151,6,"activeScenesCount"],[145,25,151,23],[146,0,152,5],[147,0,153,3],[147,5,142,2],[148,0,155,2],[148,28,156,4,"activeScenesCount"],[148,45,156,21],[148,50,156,26],[148,51,155,2],[148,53,157,4],[148,108,155,2],[148,110,158,4,"activeScenesCount"],[148,127,155,2],[150,0,161,2],[150,8,161,6,"nextScenes"],[150,18,161,16],[150,19,161,17,"length"],[150,25,161,6],[150,30,161,28,"scenes"],[150,36,161,34],[150,37,161,35,"length"],[150,43,161,2],[150,45,161,43],[151,0,162,4],[151,13,162,11,"nextScenes"],[151,23,162,4],[152,0,163,3],[154,0,165,2],[154,8,166,4,"nextScenes"],[154,18,166,14],[154,19,166,15,"some"],[154,23,166,4],[154,24,167,6],[154,34,167,7,"scene"],[154,39,167,6],[154,41,167,14,"index"],[154,46,167,6],[155,0,167,6],[155,13,167,24],[155,14,167,25,"areScenesShallowEqual"],[155,35,167,46],[155,36,167,47,"scenes"],[155,42,167,53],[155,43,167,54,"index"],[155,48,167,53],[155,49,167,46],[155,51,167,62,"scene"],[155,56,167,46],[155,57,167,6],[156,0,167,6],[156,5,166,4],[156,6,165,2],[156,8,169,4],[157,0,170,4],[157,13,170,11,"nextScenes"],[157,23,170,4],[158,0,171,3],[160,0,174,2],[160,11,174,9,"scenes"],[160,17,174,2],[161,0,175,1]]},"type":"js/module"}]}