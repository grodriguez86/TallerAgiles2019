{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getChildEventSubscriber;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function getChildEventSubscriber(addListener, key) {\n    var actionSubscribers = new Set();\n    var willFocusSubscribers = new Set();\n    var didFocusSubscribers = new Set();\n    var willBlurSubscribers = new Set();\n    var didBlurSubscribers = new Set();\n\n    var getChildSubscribers = function getChildSubscribers(evtName) {\n      switch (evtName) {\n        case 'action':\n          return actionSubscribers;\n\n        case 'willFocus':\n          return willFocusSubscribers;\n\n        case 'didFocus':\n          return didFocusSubscribers;\n\n        case 'willBlur':\n          return willBlurSubscribers;\n\n        case 'didBlur':\n          return didBlurSubscribers;\n\n        default:\n          return null;\n      }\n    };\n\n    var emit = function emit(type, payload) {\n      var payloadWithType = _objectSpread({}, payload, {\n        type: type\n      });\n\n      var subscribers = getChildSubscribers(type);\n      subscribers && subscribers.forEach(function (subs) {\n        subs(payloadWithType);\n      });\n    };\n\n    var lastEmittedEvent = 'didBlur';\n\n    var cleanup = function cleanup() {\n      upstreamSubscribers.forEach(function (subs) {\n        return subs && subs.remove();\n      });\n    };\n\n    var upstreamEvents = ['willFocus', 'didFocus', 'willBlur', 'didBlur', 'action'];\n    var upstreamSubscribers = upstreamEvents.map(function (eventName) {\n      return addListener(eventName, function (payload) {\n        var state = payload.state,\n            lastState = payload.lastState,\n            action = payload.action;\n        var lastRoutes = lastState && lastState.routes;\n        var routes = state && state.routes;\n        var lastFocusKey = lastState && lastState.routes && lastState.routes[lastState.index].key;\n        var focusKey = routes && routes[state.index].key;\n        var isChildFocused = focusKey === key;\n        var lastRoute = lastRoutes && lastRoutes.find(function (route) {\n          return route.key === key;\n        });\n        var newRoute = routes && routes.find(function (route) {\n          return route.key === key;\n        });\n        var childPayload = {\n          context: key + \":\" + action.type + \"_\" + (payload.context || 'Root'),\n          state: newRoute,\n          lastState: lastRoute,\n          action: action,\n          type: eventName\n        };\n        var isTransitioning = !!state && state.isTransitioning;\n        var previouslyLastEmittedEvent = lastEmittedEvent;\n\n        if (lastEmittedEvent === 'didBlur') {\n          if (eventName === 'willFocus' && isChildFocused) {\n            emit(lastEmittedEvent = 'willFocus', childPayload);\n          } else if (eventName === 'action' && isChildFocused) {\n            emit(lastEmittedEvent = 'willFocus', childPayload);\n          }\n        }\n\n        if (lastEmittedEvent === 'willFocus') {\n          if (eventName === 'didFocus' && isChildFocused && !isTransitioning) {\n            emit(lastEmittedEvent = 'didFocus', childPayload);\n          } else if (eventName === 'action' && isChildFocused && !isTransitioning) {\n            emit(lastEmittedEvent = 'didFocus', childPayload);\n          }\n        }\n\n        if (lastEmittedEvent === 'didFocus') {\n          if (!isChildFocused) {\n            emit(lastEmittedEvent = 'willBlur', childPayload);\n          } else if (eventName === 'willBlur') {\n            emit(lastEmittedEvent = 'willBlur', childPayload);\n          } else if (eventName === 'action' && previouslyLastEmittedEvent === 'didFocus') {\n            emit('action', childPayload);\n          }\n        }\n\n        if (lastEmittedEvent === 'willBlur') {\n          if (eventName === 'action' && !isChildFocused && !isTransitioning) {\n            emit(lastEmittedEvent = 'didBlur', childPayload);\n          } else if (eventName === 'didBlur') {\n            emit(lastEmittedEvent = 'didBlur', childPayload);\n          }\n        }\n      });\n    });\n    return function (eventName, eventHandler) {\n      var subscribers = getChildSubscribers(eventName);\n\n      if (!subscribers) {\n        throw new Error(\"Invalid event name \\\"\" + eventName + \"\\\"\");\n      }\n\n      subscribers.add(eventHandler);\n\n      var remove = function remove() {\n        subscribers.delete(eventHandler);\n      };\n\n      return {\n        remove: remove\n      };\n    };\n  }\n});","map":[[15,0,8,15],[15,11,8,24,"getChildEventSubscriber"],[15,34,8,15],[15,35,8,48,"addListener"],[15,46,8,15],[15,48,8,61,"key"],[15,51,8,15],[15,53,8,66],[16,0,9,2],[16,8,9,8,"actionSubscribers"],[16,25,9,25],[16,28,9,28],[16,32,9,32,"Set"],[16,35,9,28],[16,37,9,2],[17,0,10,2],[17,8,10,8,"willFocusSubscribers"],[17,28,10,28],[17,31,10,31],[17,35,10,35,"Set"],[17,38,10,31],[17,40,10,2],[18,0,11,2],[18,8,11,8,"didFocusSubscribers"],[18,27,11,27],[18,30,11,30],[18,34,11,34,"Set"],[18,37,11,30],[18,39,11,2],[19,0,12,2],[19,8,12,8,"willBlurSubscribers"],[19,27,12,27],[19,30,12,30],[19,34,12,34,"Set"],[19,37,12,30],[19,39,12,2],[20,0,13,2],[20,8,13,8,"didBlurSubscribers"],[20,26,13,26],[20,29,13,29],[20,33,13,33,"Set"],[20,36,13,29],[20,38,13,2],[22,0,15,2],[22,8,15,8,"getChildSubscribers"],[22,27,15,27],[22,30,15,30],[22,39,15,8,"getChildSubscribers"],[22,58,15,30],[22,59,15,30,"evtName"],[22,66,15,37],[22,68,15,41],[23,0,16,4],[23,14,16,12,"evtName"],[23,21,16,4],[24,0,17,6],[24,13,17,11],[24,21,17,6],[25,0,18,8],[25,17,18,15,"actionSubscribers"],[25,34,18,8],[27,0,19,6],[27,13,19,11],[27,24,19,6],[28,0,20,8],[28,17,20,15,"willFocusSubscribers"],[28,37,20,8],[30,0,21,6],[30,13,21,11],[30,23,21,6],[31,0,22,8],[31,17,22,15,"didFocusSubscribers"],[31,36,22,8],[33,0,23,6],[33,13,23,11],[33,23,23,6],[34,0,24,8],[34,17,24,15,"willBlurSubscribers"],[34,36,24,8],[36,0,25,6],[36,13,25,11],[36,22,25,6],[37,0,26,8],[37,17,26,15,"didBlurSubscribers"],[37,35,26,8],[39,0,27,6],[40,0,28,8],[40,17,28,15],[40,21,28,8],[41,0,16,4],[42,0,30,3],[42,5,15,2],[44,0,32,2],[44,8,32,8,"emit"],[44,12,32,12],[44,15,32,15],[44,24,32,8,"emit"],[44,28,32,15],[44,29,32,16,"type"],[44,33,32,15],[44,35,32,22,"payload"],[44,42,32,15],[44,44,32,34],[45,0,33,4],[45,10,33,10,"payloadWithType"],[45,25,33,25],[45,46,33,33,"payload"],[45,53,33,25],[46,0,33,42,"type"],[46,8,33,42,"type"],[46,12,33,46],[46,14,33,42,"type"],[47,0,33,25],[47,8,33,4],[49,0,34,4],[49,10,34,10,"subscribers"],[49,21,34,21],[49,24,34,24,"getChildSubscribers"],[49,43,34,43],[49,44,34,44,"type"],[49,48,34,43],[49,49,34,4],[50,0,35,4,"subscribers"],[50,6,35,4,"subscribers"],[50,17,35,15],[50,21,36,6,"subscribers"],[50,32,36,17],[50,33,36,18,"forEach"],[50,40,36,6],[50,41,36,26],[50,51,36,26,"subs"],[50,55,36,30],[50,57,36,34],[51,0,37,8,"subs"],[51,8,37,8,"subs"],[51,12,37,12],[51,13,37,13,"payloadWithType"],[51,28,37,12],[51,29,37,8],[52,0,38,7],[52,7,36,6],[52,8,35,4],[53,0,39,3],[53,5,32,2],[55,0,45,2],[55,8,45,6,"lastEmittedEvent"],[55,24,45,22],[55,27,45,25],[55,36,45,2],[57,0,47,2],[57,8,47,8,"cleanup"],[57,15,47,15],[57,18,47,18],[57,27,47,8,"cleanup"],[57,34,47,18],[57,37,47,24],[58,0,48,4,"upstreamSubscribers"],[58,6,48,4,"upstreamSubscribers"],[58,25,48,23],[58,26,48,24,"forEach"],[58,33,48,4],[58,34,48,32],[58,44,48,32,"subs"],[58,48,48,36],[59,0,48,36],[59,15,48,40,"subs"],[59,19,48,44],[59,23,48,48,"subs"],[59,27,48,52],[59,28,48,53,"remove"],[59,34,48,48],[59,36,48,36],[60,0,48,36],[60,7,48,4],[61,0,49,3],[61,5,47,2],[63,0,51,2],[63,8,51,8,"upstreamEvents"],[63,22,51,22],[63,25,51,25],[63,26,52,4],[63,37,51,25],[63,39,53,4],[63,49,51,25],[63,51,54,4],[63,61,51,25],[63,63,55,4],[63,72,51,25],[63,74,56,4],[63,82,51,25],[63,83,51,2],[64,0,59,2],[64,8,59,8,"upstreamSubscribers"],[64,27,59,27],[64,30,59,30,"upstreamEvents"],[64,44,59,44],[64,45,59,45,"map"],[64,48,59,30],[64,49,59,49],[64,59,59,49,"eventName"],[64,68,59,58],[65,0,59,58],[65,13,60,4,"addListener"],[65,24,60,15],[65,25,60,16,"eventName"],[65,34,60,15],[65,36,60,27],[65,46,60,27,"payload"],[65,53,60,34],[65,55,60,38],[66,0,60,38],[66,12,61,14,"state"],[66,17,60,38],[66,20,61,43,"payload"],[66,27,60,38],[66,28,61,14,"state"],[66,33,60,38],[67,0,60,38],[67,12,61,21,"lastState"],[67,21,60,38],[67,24,61,43,"payload"],[67,31,60,38],[67,32,61,21,"lastState"],[67,41,60,38],[68,0,60,38],[68,12,61,32,"action"],[68,18,60,38],[68,21,61,43,"payload"],[68,28,60,38],[68,29,61,32,"action"],[68,35,60,38],[69,0,62,6],[69,12,62,12,"lastRoutes"],[69,22,62,22],[69,25,62,25,"lastState"],[69,34,62,34],[69,38,62,38,"lastState"],[69,47,62,47],[69,48,62,48,"routes"],[69,54,62,6],[70,0,63,6],[70,12,63,12,"routes"],[70,18,63,18],[70,21,63,21,"state"],[70,26,63,26],[70,30,63,30,"state"],[70,35,63,35],[70,36,63,36,"routes"],[70,42,63,6],[71,0,65,6],[71,12,65,12,"lastFocusKey"],[71,24,65,24],[71,27,66,8,"lastState"],[71,36,66,17],[71,40,66,21,"lastState"],[71,49,66,30],[71,50,66,31,"routes"],[71,56,66,8],[71,60,66,41,"lastState"],[71,69,66,50],[71,70,66,51,"routes"],[71,76,66,41],[71,77,66,58,"lastState"],[71,86,66,67],[71,87,66,68,"index"],[71,92,66,41],[71,94,66,75,"key"],[71,97,65,6],[72,0,67,6],[72,12,67,12,"focusKey"],[72,20,67,20],[72,23,67,23,"routes"],[72,29,67,29],[72,33,67,33,"routes"],[72,39,67,39],[72,40,67,40,"state"],[72,45,67,45],[72,46,67,46,"index"],[72,51,67,39],[72,52,67,33],[72,53,67,53,"key"],[72,56,67,6],[73,0,69,6],[73,12,69,12,"isChildFocused"],[73,26,69,26],[73,29,69,29,"focusKey"],[73,37,69,37],[73,42,69,42,"key"],[73,45,69,6],[74,0,70,6],[74,12,70,12,"lastRoute"],[74,21,70,21],[74,24,71,8,"lastRoutes"],[74,34,71,18],[74,38,71,22,"lastRoutes"],[74,48,71,32],[74,49,71,33,"find"],[74,53,71,22],[74,54,71,38],[74,64,71,38,"route"],[74,69,71,43],[75,0,71,43],[75,17,71,47,"route"],[75,22,71,52],[75,23,71,53,"key"],[75,26,71,47],[75,31,71,61,"key"],[75,34,71,43],[76,0,71,43],[76,9,71,22],[76,10,70,6],[77,0,72,6],[77,12,72,12,"newRoute"],[77,20,72,20],[77,23,72,23,"routes"],[77,29,72,29],[77,33,72,33,"routes"],[77,39,72,39],[77,40,72,40,"find"],[77,44,72,33],[77,45,72,45],[77,55,72,45,"route"],[77,60,72,50],[78,0,72,50],[78,17,72,54,"route"],[78,22,72,59],[78,23,72,60,"key"],[78,26,72,54],[78,31,72,68,"key"],[78,34,72,50],[79,0,72,50],[79,9,72,33],[79,10,72,6],[80,0,73,6],[80,12,73,12,"childPayload"],[80,24,73,24],[80,27,73,27],[81,0,74,8,"context"],[81,10,74,8,"context"],[81,17,74,15],[81,19,74,20,"key"],[81,22,74,15],[81,31,74,27,"action"],[81,37,74,33],[81,38,74,34,"type"],[81,42,74,15],[81,52,74,42,"payload"],[81,59,74,49],[81,60,74,50,"context"],[81,67,74,42],[81,71,74,61],[81,77,74,15],[81,78,73,27],[82,0,75,8,"state"],[82,10,75,8,"state"],[82,15,75,13],[82,17,75,15,"newRoute"],[82,25,73,27],[83,0,76,8,"lastState"],[83,10,76,8,"lastState"],[83,19,76,17],[83,21,76,19,"lastRoute"],[83,30,73,27],[84,0,77,8,"action"],[84,10,77,8,"action"],[84,16,77,14],[84,18,77,8,"action"],[84,24,73,27],[85,0,78,8,"type"],[85,10,78,8,"type"],[85,14,78,12],[85,16,78,14,"eventName"],[86,0,73,27],[86,9,73,6],[87,0,80,6],[87,12,80,12,"isTransitioning"],[87,27,80,27],[87,30,80,30],[87,31,80,31],[87,32,80,32,"state"],[87,37,80,30],[87,41,80,41,"state"],[87,46,80,46],[87,47,80,47,"isTransitioning"],[87,62,80,6],[88,0,82,6],[88,12,82,12,"previouslyLastEmittedEvent"],[88,38,82,38],[88,41,82,41,"lastEmittedEvent"],[88,57,82,6],[90,0,84,6],[90,12,84,10,"lastEmittedEvent"],[90,28,84,26],[90,33,84,31],[90,42,84,6],[90,44,84,42],[91,0,86,8],[91,14,86,12,"eventName"],[91,23,86,21],[91,28,86,26],[91,39,86,12],[91,43,86,41,"isChildFocused"],[91,57,86,8],[91,59,86,57],[92,0,87,10,"emit"],[92,12,87,10,"emit"],[92,16,87,14],[92,17,87,16,"lastEmittedEvent"],[92,33,87,32],[92,36,87,35],[92,47,87,14],[92,49,87,49,"childPayload"],[92,61,87,14],[92,62,87,10],[93,0,88,9],[93,11,86,8],[93,17,88,15],[93,21,88,19,"eventName"],[93,30,88,28],[93,35,88,33],[93,43,88,19],[93,47,88,45,"isChildFocused"],[93,61,88,15],[93,63,88,61],[94,0,89,10,"emit"],[94,12,89,10,"emit"],[94,16,89,14],[94,17,89,16,"lastEmittedEvent"],[94,33,89,32],[94,36,89,35],[94,47,89,14],[94,49,89,49,"childPayload"],[94,61,89,14],[94,62,89,10],[95,0,90,9],[96,0,91,7],[98,0,92,6],[98,12,92,10,"lastEmittedEvent"],[98,28,92,26],[98,33,92,31],[98,44,92,6],[98,46,92,44],[99,0,95,8],[99,14,95,12,"eventName"],[99,23,95,21],[99,28,95,26],[99,38,95,12],[99,42,95,40,"isChildFocused"],[99,56,95,12],[99,60,95,58],[99,61,95,59,"isTransitioning"],[99,76,95,8],[99,78,95,76],[100,0,96,10,"emit"],[100,12,96,10,"emit"],[100,16,96,14],[100,17,96,16,"lastEmittedEvent"],[100,33,96,32],[100,36,96,35],[100,46,96,14],[100,48,96,48,"childPayload"],[100,60,96,14],[100,61,96,10],[101,0,97,9],[101,11,95,8],[101,17,97,15],[101,21,98,10,"eventName"],[101,30,98,19],[101,35,98,24],[101,43,98,10],[101,47,99,10,"isChildFocused"],[101,61,98,10],[101,65,100,10],[101,66,100,11,"isTransitioning"],[101,81,97,15],[101,83,101,10],[102,0,102,10,"emit"],[102,12,102,10,"emit"],[102,16,102,14],[102,17,102,16,"lastEmittedEvent"],[102,33,102,32],[102,36,102,35],[102,46,102,14],[102,48,102,48,"childPayload"],[102,60,102,14],[102,61,102,10],[103,0,103,9],[104,0,104,7],[106,0,106,6],[106,12,106,10,"lastEmittedEvent"],[106,28,106,26],[106,33,106,31],[106,43,106,6],[106,45,106,43],[107,0,108,8],[107,14,108,12],[107,15,108,13,"isChildFocused"],[107,29,108,8],[107,31,108,29],[108,0,110,10,"emit"],[108,12,110,10,"emit"],[108,16,110,14],[108,17,110,16,"lastEmittedEvent"],[108,33,110,32],[108,36,110,35],[108,46,110,14],[108,48,110,48,"childPayload"],[108,60,110,14],[108,61,110,10],[109,0,111,9],[109,11,108,8],[109,17,111,15],[109,21,111,19,"eventName"],[109,30,111,28],[109,35,111,33],[109,45,111,15],[109,47,111,45],[110,0,113,10,"emit"],[110,12,113,10,"emit"],[110,16,113,14],[110,17,113,16,"lastEmittedEvent"],[110,33,113,32],[110,36,113,35],[110,46,113,14],[110,48,113,48,"childPayload"],[110,60,113,14],[110,61,113,10],[111,0,114,9],[111,11,111,15],[111,17,114,15],[111,21,115,10,"eventName"],[111,30,115,19],[111,35,115,24],[111,43,115,10],[111,47,116,10,"previouslyLastEmittedEvent"],[111,73,116,36],[111,78,116,41],[111,88,114,15],[111,90,117,10],[112,0,119,10,"emit"],[112,12,119,10,"emit"],[112,16,119,14],[112,17,119,15],[112,25,119,14],[112,27,119,25,"childPayload"],[112,39,119,14],[112,40,119,10],[113,0,120,9],[114,0,121,7],[116,0,123,6],[116,12,123,10,"lastEmittedEvent"],[116,28,123,26],[116,33,123,31],[116,43,123,6],[116,45,123,43],[117,0,125,8],[117,14,125,12,"eventName"],[117,23,125,21],[117,28,125,26],[117,36,125,12],[117,40,125,38],[117,41,125,39,"isChildFocused"],[117,55,125,12],[117,59,125,57],[117,60,125,58,"isTransitioning"],[117,75,125,8],[117,77,125,75],[118,0,128,10,"emit"],[118,12,128,10,"emit"],[118,16,128,14],[118,17,128,16,"lastEmittedEvent"],[118,33,128,32],[118,36,128,35],[118,45,128,14],[118,47,128,47,"childPayload"],[118,59,128,14],[118,60,128,10],[119,0,129,9],[119,11,125,8],[119,17,129,15],[119,21,129,19,"eventName"],[119,30,129,28],[119,35,129,33],[119,44,129,15],[119,46,129,44],[120,0,131,10,"emit"],[120,12,131,10,"emit"],[120,16,131,14],[120,17,131,16,"lastEmittedEvent"],[120,33,131,32],[120,36,131,35],[120,45,131,14],[120,47,131,47,"childPayload"],[120,59,131,14],[120,60,131,10],[121,0,132,9],[122,0,133,7],[123,0,134,5],[123,7,60,15],[123,8,59,58],[124,0,59,58],[124,5,59,30],[124,6,59,2],[125,0,137,2],[125,11,137,9],[125,21,137,10,"eventName"],[125,30,137,9],[125,32,137,21,"eventHandler"],[125,44,137,9],[125,46,137,38],[126,0,138,4],[126,10,138,10,"subscribers"],[126,21,138,21],[126,24,138,24,"getChildSubscribers"],[126,43,138,43],[126,44,138,44,"eventName"],[126,53,138,43],[126,54,138,4],[128,0,139,4],[128,10,139,8],[128,11,139,9,"subscribers"],[128,22,139,4],[128,24,139,22],[129,0,140,6],[129,14,140,12],[129,18,140,16,"Error"],[129,23,140,12],[129,50,140,45,"eventName"],[129,59,140,12],[129,67,140,6],[130,0,141,5],[132,0,142,4,"subscribers"],[132,6,142,4,"subscribers"],[132,17,142,15],[132,18,142,16,"add"],[132,21,142,4],[132,22,142,20,"eventHandler"],[132,34,142,4],[134,0,143,4],[134,10,143,10,"remove"],[134,16,143,16],[134,19,143,19],[134,28,143,10,"remove"],[134,34,143,19],[134,37,143,25],[135,0,144,6,"subscribers"],[135,8,144,6,"subscribers"],[135,19,144,17],[135,20,144,18,"delete"],[135,26,144,6],[135,27,144,25,"eventHandler"],[135,39,144,6],[136,0,145,5],[136,7,143,4],[138,0,146,4],[138,13,146,11],[139,0,146,13,"remove"],[139,8,146,13,"remove"],[139,14,146,19],[139,16,146,13,"remove"],[140,0,146,11],[140,7,146,4],[141,0,147,3],[141,5,137,2],[142,0,148,1]]},"type":"js/module"}]}